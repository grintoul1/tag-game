-- you do not need this lua script, though it will allow you to with mgba 0.10 to export your pokemon to the calc
-- to use download this file on mgba select tools->scripting then file->open and open this file

-- The below configs should be set to false if you want lua_update_script.py to not parse them to the
-- public_lua_script.lua

local configOverlayPokemon = true
local configCompanion = false
local configPokemonEditing = true
local configPreDamage = true
local configPreStatus = true
local configRandomize = true

local overlayConfig = {}
overlayConfig.enabled = false
overlayConfig.processParty = true
overlayConfig.processBoxes = false
overlayConfig.frameCounter = 0
overlayConfig.checkInterval = 300
overlayConfig.debug = true

local companionConfig = {}
companionConfig.enabled = false
companionConfig.processParty = true
companionConfig.processBoxes = true
companionConfig.frameCounter = 0
companionConfig.checkInterval = 300
companionConfig.debug = true


-- Companion: remove moves after Malignant Chain
move = {"",
    "Pound",
    "Karate Chop",
    "Double Slap",
    "Comet Punch",
    "Mega Punch",
    "Pay Day",
    "Fire Punch",
    "Ice Punch",
    "Thunder Punch",
    "Scratch",
    "Vise Grip",
    "Guillotine",
    "Razor Wind",
    "Swords Dance",
    "Cut",
    "Gust",
    "Wing Attack",
    "Whirlwind",
    "Fly",
    "Bind",
    "Slam",
    "Vine Whip",
    "Stomp",
    "Double Kick",
    "Mega Kick",
    "Jump Kick",
    "Rolling Kick",
    "Sand Attack",
    "Headbutt",
    "Horn Attack",
    "Fury Attack",
    "Horn Drill",
    "Tackle",
    "Body Slam",
    "Wrap",
    "Take Down",
    "Thrash",
    "Double-Edge",
    "Tail Whip",
    "Poison Sting",
    "Twineedle",
    "Pin Missile",
    "Leer",
    "Bite",
    "Growl",
    "Roar",
    "Sing",
    "Supersonic",
    "Sonic Boom",
    "Disable",
    "Acid",
    "Ember",
    "Flamethrower",
    "Mist",
    "Water Gun",
    "Hydro Pump",
    "Surf",
    "Ice Beam",
    "Blizzard",
    "Psybeam",
    "Bubble Beam",
    "Aurora Beam",
    "Hyper Beam",
    "Peck",
    "Drill Peck",
    "Submission",
    "Low Kick",
    "Counter",
    "Seismic Toss",
    "Strength",
    "Absorb",
    "Mega Drain",
    "Leech Seed",
    "Growth",
    "Razor Leaf",
    "Solar Beam",
    "Poison Powder",
    "Stun Spore",
    "Sleep Powder",
    "Petal Dance",
    "String Shot",
    "Dragon Rage",
    "Fire Spin",
    "Thunder Shock",
    "Thunderbolt",
    "Thunder Wave",
    "Thunder",
    "Rock Throw",
    "Earthquake",
    "Fissure",
    "Dig",
    "Toxic",
    "Confusion",
    "Psychic",
    "Hypnosis",
    "Meditate",
    "Agility",
    "Quick Attack",
    "Rage",
    "Teleport",
    "Night Shade",
    "Mimic",
    "Screech",
    "Double Team",
    "Recover",
    "Harden",
    "Minimize",
    "Smokescreen",
    "Confuse Ray",
    "Withdraw",
    "Defense Curl",
    "Barrier",
    "Light Screen",
    "Haze",
    "Reflect",
    "Focus Energy",
    "Bide",
    "Metronome",
    "Mirror Move",
    "Self-Destruct",
    "Egg Bomb",
    "Lick",
    "Smog",
    "Sludge",
    "Bone Club",
    "Fire Blast",
    "Waterfall",
    "Clamp",
    "Swift",
    "Skull Bash",
    "Spike Cannon",
    "Constrict",
    "Amnesia",
    "Kinesis",
    "Soft Boiled",
    "High Jump Kick",
    "Glare",
    "Dream Eater",
    "Poison Gas",
    "Barrage",
    "Leech Life",
    "Lovely Kiss",
    "Sky Attack",
    "Transform",
    "Bubble",
    "Dizzy Punch",
    "Spore",
    "Flash",
    "Psywave",
    "Splash",
    "Acid Armor",
    "Crabhammer",
    "Explosion",
    "Fury Swipes",
    "Bonemerang",
    "Rest",
    "Rock Slide",
    "Hyper Fang",
    "Sharpen",
    "Conversion",
    "Tri Attack",
    "Super Fang",
    "Slash",
    "Substitute",
    "Struggle",
    "Sketch",
    "Triple Kick",
    "Thief",
    "Spider Web",
    "Mind Reader",
    "Nightmare",
    "Flame Wheel",
    "Snore",
    "Curse",
    "Flail",
    "Conversion 2",
    "Aeroblast",
    "Cotton Spore",
    "Reversal",
    "Spite",
    "Powder Snow",
    "Protect",
    "Mach Punch",
    "Scary Face",
    "Feint Attack",
    "Sweet Kiss",
    "Belly Drum",
    "Sludge Bomb",
    "Mud-Slap",
    "Octazooka",
    "Spikes",
    "Zap Cannon",
    "Foresight",
    "Destiny Bond",
    "Perish Song",
    "Icy Wind",
    "Detect",
    "Bone Rush",
    "Lock-On",
    "Outrage",
    "Sandstorm",
    "Giga Drain",
    "Endure",
    "Charm",
    "Rollout",
    "False Swipe",
    "Swagger",
    "Milk Drink",
    "Spark",
    "Fury Cutter",
    "Steel Wing",
    "Mean Look",
    "Attract",
    "Sleep Talk",
    "Heal Bell",
    "Return",
    "Present",
    "Frustration",
    "Safeguard",
    "Pain Split",
    "Sacred Fire",
    "Magnitude",
    "Dynamic Punch",
    "Megahorn",
    "Dragon Breath",
    "Baton Pass",
    "Encore",
    "Pursuit",
    "Rapid Spin",
    "Sweet Scent",
    "Iron Tail",
    "Metal Claw",
    "Vital Throw",
    "Morning Sun",
    "Synthesis",
    "Moonlight",
    "Hidden Power",
    "Cross Chop",
    "Twister",
    "Rain Dance",
    "Sunny Day",
    "Crunch",
    "Mirror Coat",
    "Psych Up",
    "Extreme Speed",
    "Ancient Power",
    "Shadow Ball",
    "Future Sight",
    "Rock Smash",
    "Whirlpool",
    "Beat Up",
    "Fake Out",
    "Uproar",
    "Stockpile",
    "Spit Up",
    "Swallow",
    "Heat Wave",
    "Hail",
    "Torment",
    "Flatter",
    "Will-O-Wisp",
    "Memento",
    "Facade",
    "Focus Punch",
    "Smelling Salts",
    "Follow Me",
    "Nature Power",
    "Charge",
    "Taunt",
    "Helping Hand",
    "Trick",
    "Role Play",
    "Wish",
    "Assist",
    "Ingrain",
    "Superpower",
    "Magic Coat",
    "Recycle",
    "Revenge",
    "Brick Break",
    "Yawn",
    "Knock Off",
    "Endeavor",
    "Eruption",
    "Skill Swap",
    "Imprison",
    "Refresh",
    "Grudge",
    "Snatch",
    "Secret Power",
    "Dive",
    "Arm Thrust",
    "Camouflage",
    "Tail Glow",
    "Luster Purge",
    "Mist Ball",
    "Feather Dance",
    "Teeter Dance",
    "Blaze Kick",
    "Mud Sport",
    "Ice Ball",
    "Needle Arm",
    "Slack Off",
    "Hyper Voice",
    "Poison Fang",
    "Crush Claw",
    "Blast Burn",
    "Hydro Cannon",
    "Meteor Mash",
    "Astonish",
    "Weather Ball",
    "Aromatherapy",
    "Fake Tears",
    "Air Cutter",
    "Overheat",
    "Odor Sleuth",
    "Rock Tomb",
    "Silver Wind",
    "Metal Sound",
    "Grass Whistle",
    "Tickle",
    "Cosmic Power",
    "Water Spout",
    "Signal Beam",
    "Shadow Punch",
    "Extrasensory",
    "Sky Uppercut",
    "Sand Tomb",
    "Sheer Cold",
    "Muddy Water",
    "Bullet Seed",
    "Aerial Ace",
    "Icicle Spear",
    "Iron Defense",
    "Block",
    "Howl",
    "Dragon Claw",
    "Frenzy Plant",
    "Bulk Up",
    "Bounce",
    "Mud Shot",
    "Poison Tail",
    "Covet",
    "Volt Tackle",
    "Magical Leaf",
    "Water Sport",
    "Calm Mind",
    "Leaf Blade",
    "Dragon Dance",
    "Rock Blast",
    "Shock Wave",
    "Water Pulse",
    "Doom Desire",
    "Psycho Boost",
    "Roost",
    "Gravity",
    "Miracle Eye",
    "Wake-Up Slap",
    "Hammer Arm",
    "Gyro Ball",
    "Healing Wish",
    "Brine",
    "Natural Gift",
    "Feint",
    "Pluck",
    "Tailwind",
    "Acupressure",
    "Metal Burst",
    "U-turn",
    "Close Combat",
    "Payback",
    "Assurance",
    "Embargo",
    "Fling",
    "Psycho Shift",
    "Trump Card",
    "Heal Block",
    "Wring Out",
    "Power Trick",
    "Gastro Acid",
    "Lucky Chant",
    "Me First",
    "Copycat",
    "Power Swap",
    "Guard Swap",
    "Punishment",
    "Last Resort",
    "Worry Seed",
    "Sucker Punch",
    "Toxic Spikes",
    "Heart Swap",
    "Aqua Ring",
    "Magnet Rise",
    "Flare Blitz",
    "Force Palm",
    "Aura Sphere",
    "Rock Polish",
    "Poison Jab",
    "Dark Pulse",
    "Night Slash",
    "Aqua Tail",
    "Seed Bomb",
    "Air Slash",
    "X-Scissor",
    "Bug Buzz",
    "Dragon Pulse",
    "Dragon Rush",
    "Power Gem",
    "Drain Punch",
    "Vacuum Wave",
    "Focus Blast",
    "Energy Ball",
    "Brave Bird",
    "Earth Power",
    "Switcheroo",
    "Giga Impact",
    "Nasty Plot",
    "Bullet Punch",
    "Avalanche",
    "Ice Shard",
    "Shadow Claw",
    "Thunder Fang",
    "Ice Fang",
    "Fire Fang",
    "Shadow Sneak",
    "Mud Bomb",
    "Psycho Cut",
    "Zen Headbutt",
    "Mirror Shot",
    "Flash Cannon",
    "Rock Climb",
    "Defog",
    "Trick Room",
    "Draco Meteor",
    "Discharge",
    "Lava Plume",
    "Leaf Storm",
    "Power Whip",
    "Rock Wrecker",
    "Cross Poison",
    "Gunk Shot",
    "Iron Head",
    "Magnet Bomb",
    "Stone Edge",
    "Captivate",
    "Stealth Rock",
    "Grass Knot",
    "Chatter",
    "Judgment",
    "Bug Bite",
    "Charge Beam",
    "Wood Hammer",
    "Aqua Jet",
    "Attack Order",
    "Defend Order",
    "Heal Order",
    "Head Smash",
    "Double Hit",
    "Roar of Time",
    "Spacial Rend",
    "Lunar Dance",
    "Crush Grip",
    "Magma Storm",
    "Dark Void",
    "Seed Flare",
    "Ominous Wind",
    "Shadow Force",
    "Hone Claws",
    "Wide Guard",
    "Guard Split",
    "Power Split",
    "Wonder Room",
    "Psyshock",
    "Venoshock",
    "Autotomize",
    "Rage Powder",
    "Telekinesis",
    "Magic Room",
    "Smack Down",
    "Storm Throw",
    "Flame Burst",
    "Sludge Wave",
    "Quiver Dance",
    "Heavy Slam",
    "Synchronoise",
    "Electro Ball",
    "Soak",
    "Flame Charge",
    "Coil",
    "Low Sweep",
    "Acid Spray",
    "Foul Play",
    "Simple Beam",
    "Entrainment",
    "After You",
    "Round",
    "Echoed Voice",
    "Chip Away",
    "Clear Smog",
    "Stored Power",
    "Quick Guard",
    "Ally Switch",
    "Scald",
    "Shell Smash",
    "Heal Pulse",
    "Hex",
    "Sky Drop",
    "Shift Gear",
    "Circle Throw",
    "Incinerate",
    "Quash",
    "Acrobatics",
    "Reflect Type",
    "Retaliate",
    "Final Gambit",
    "Bestow",
    "Inferno",
    "Water Pledge",
    "Fire Pledge",
    "Grass Pledge",
    "Volt Switch",
    "Struggle Bug",
    "Bulldoze",
    "Frost Breath",
    "Dragon Tail",
    "Work Up",
    "Electroweb",
    "Wild Charge",
    "Drill Run",
    "Dual Chop",
    "Heart Stamp",
    "Horn Leech",
    "Sacred Sword",
    "Razor Shell",
    "Heat Crash",
    "Leaf Tornado",
    "Steamroller",
    "Cotton Guard",
    "Night Daze",
    "Psystrike",
    "Tail Slap",
    "Hurricane",
    "Head Charge",
    "Gear Grind",
    "Searing Shot",
    "Techno Blast",
    "Relic Song",
    "Secret Sword",
    "Glaciate",
    "Bolt Strike",
    "Blue Flare",
    "Fiery Dance",
    "Freeze Shock",
    "Ice Burn",
    "Snarl",
    "Icicle Crash",
    "V-create",
    "Fusion Flare",
    "Fusion Bolt",
    "Flying Press",
    "Mat Block",
    "Belch",
    "Rototiller",
    "Sticky Web",
    "Fell Stinger",
    "Phantom Force",
    "Trick-or-Treat",
    "Noble Roar",
    "Ion Deluge",
    "Parabolic Charge",
    "Forest's Curse",
    "Petal Blizzard",
    "Freeze-Dry",
    "Disarming Voice",
    "Parting Shot",
    "Topsy-Turvy",
    "Draining Kiss",
    "Crafty Shield",
    "Flower Shield",
    "Grassy Terrain",
    "Misty Terrain",
    "Electrify",
    "Play Rough",
    "Fairy Wind",
    "Moonblast",
    "Boomburst",
    "Fairy Lock",
    "King's Shield",
    "Play Nice",
    "Confide",
    "Diamond Storm",
    "Steam Eruption",
    "Hyperspace Hole",
    "Water Shuriken",
    "Mystical Fire",
    "Spiky Shield",
    "Aromatic Mist",
    "Eerie Impulse",
    "Venom Drench",
    "Powder",
    "Geomancy",
    "Magnetic Flux",
    "Happy Hour",
    "Electric Terrain",
    "Dazzling Gleam",
    "Celebrate",
    "Hold Hands",
    "Baby-Doll Eyes",
    "Nuzzle",
    "Hold Back",
    "Infestation",
    "Power-Up Punch",
    "Oblivion Wing",
    "Thousand Arrows",
    "Thousand Waves",
    "Land's Wrath",
    "Light of Ruin",
    "Origin Pulse",
    "Precipice Blades",
    "Dragon Ascent",
    "Hyperspace Fury",
    "Shore Up",
    "First Impression",
    "Baneful Bunker",
    "Spirit Shackle",
    "Darkest Lariat",
    "Sparkling Aria",
    "Ice Hammer",
    "Floral Healing",
    "High Horsepower",
    "Strength Sap",
    "Solar Blade",
    "Leafage",
    "Spotlight",
    "Toxic Thread",
    "Laser Focus",
    "Gear Up",
    "Throat Chop",
    "Pollen Puff",
    "Anchor Shot",
    "Psychic Terrain",
    "Lunge",
    "Fire Lash",
    "Power Trip",
    "Burn Up",
    "Speed Swap",
    "Smart Strike",
    "Purify",
    "Revelation Dance",
    "Core Enforcer",
    "Trop Kick",
    "Instruct",
    "Beak Blast",
    "Clanging Scales",
    "Dragon Hammer",
    "Brutal Swing",
    "Aurora Veil",
    "Shell Trap",
    "Fleur Cannon",
    "Psychic Fangs",
    "Stomping Tantrum",
    "Shadow Bone",
    "Accelerock",
    "Liquidation",
    "Prismatic Laser",
    "Spectral Thief",
    "Sunsteel Strike",
    "Moongeist Beam",
    "Tearful Look",
    "Zing Zap",
    "Nature's Madness",
    "Multi-Attack",
    "Mind Blown",
    "Plasma Fists",
    "Photon Geyser",
    "Zippy Zap",
    "Splishy Splash",
    "Floaty Fall",
    "Pika Papow",
    "Bouncy Bubble",
    "Buzzy Buzz",
    "Sizzly Slide",
    "Glitzy Glow",
    "Baddy Bad",
    "Sappy Seed",
    "Freezy Frost",
    "Sparkly Swirl",
    "Veevee Volley",
    "Double Iron Bash",
    "Dynamax Cannon",
    "Snipe Shot",
    "Jaw Lock",
    "Stuff Cheeks",
    "No Retreat",
    "Tar Shot",
    "Magic Powder",
    "Dragon Darts",
    "Teatime",
    "Octolock",
    "Bolt Beak",
    "Fishious Rend",
    "Court Change",
    "Clangorous Soul",
    "Body Press",
    "Decorate",
    "Drum Beating",
    "Snap Trap",
    "Pyro Ball",
    "Behemoth Blade",
    "Behemoth Bash",
    "Aura Wheel",
    "Breaking Swipe",
    "Branch Poke",
    "Overdrive",
    "Apple Acid",
    "Grav Apple",
    "Spirit Break",
    "Strange Steam",
    "Life Dew",
    "Obstruct",
    "False Surrender",
    "Meteor Assault",
    "Eternabeam",
    "Steel Beam",
    "Expanding Force",
    "Steel Roller",
    "Scale Shot",
    "Meteor Beam",
    "Shell Side Arm",
    "Misty Explosion",
    "Grassy Glide",
    "Rising Voltage",
    "Terrain Pulse",
    "Skitter Smack",
    "Burning Jealousy",
    "Lash Out",
    "Poltergeist",
    "Corrosive Gas",
    "Coaching",
    "Flip Turn",
    "Triple Axel",
    "Dual Wingbeat",
    "Scorching Sands",
    "Jungle Healing",
    "Wicked Blow",
    "Surging Strikes",
    "Thunder Cage",
    "Dragon Energy",
    "Freezing Glare",
    "Fiery Wrath",
    "Thunderous Kick",
    "Glacial Lance",
    "Astral Barrage",
    "Eerie Spell",
    "Dire Claw",
    "Psyshield Bash",
    "Power Shift",
    "Stone Axe",
    "Springtide Storm",
    "Mystical Power",
    "Raging Fury",
    "Wave Crash",
    "Chloroblast",
    "Mountain Gale",
    "Victory Dance",
    "Headlong Rush",
    "Barb Barrage",
    "Esper Wing",
    "Bitter Malice",
    "Shelter",
    "Triple Arrows",
    "Infernal Parade",
    "Ceaseless Edge",
    "Bleakwind Storm",
    "Wildbolt Storm",
    "Sandsear Storm",
    "Lunar Blessing",
    "Take Heart",
    "Tera Blast",
    "Silk Trap",
    "Axe Kick",
    "Last Respects",
    "Lumina Crash",
    "Order Up",
    "Jet Punch",
    "Spicy Extract",
    "Spin Out",
    "Population Bomb",
    "Ice Spinner",
    "Glaive Rush",
    "Revival Blessing",
    "Salt Cure",
    "Triple Dive",
    "Mortal Spin",
    "Doodle",
    "Fillet Away",
    "Kowtow Cleave",
    "Flower Trick",
    "Torch Song",
    "Aqua Step",
    "Raging Bull",
    "Make It Rain",
    "Ruination",
    "Collision Course",
    "Electro Drift",
    "Shed Tail",
    "Chilly Reception",
    "Tidy Up",
    "Snowscape",
    "Pounce",
    "Trailblaze",
    "Chilling Water",
    "Hyper Drill",
    "Twin Beam",
    "Rage Fist",
    "Armor Cannon",
    "Bitter Blade",
    "Double Shock",
    "Gigaton Hammer",
    "Comeuppance",
    "Aqua Cutter",
    "Blazing Torque",
    "Wicked Torque",
    "Noxious Torque",
    "Combat Torque",
    "Magical Torque",
    "Psyblade",
    "Hydro Steam",
    "Blood Moon",
    "Matcha Gotcha",
    "Syrup Bomb",
    "Ivy Cudgel",
    "Electro Shot",
    "Tera Starstorm",
    "Fickle Beam",
    "Burning Bulwark",
    "Thunderclap",
    "Mighty Cleave",
    "Tachyon Cutter",
    "Hard Press",
    "Dragon Cheer",
    "Alluring Voice",
    "Temper Flare",
    "Supercell Slam",
    "Psychic Noise",
    "Upper Hand",
    "Malignant Chain",
    "Frozen Reception",
    "Chill-O-Wisp",
    "Enlightening",
    "Frosty Gale",
    "Frost Fang",
    "Frost Punch",
    "Low Horsepower"
}

mons = {
    "Bulbasaur",
    "Ivysaur",
    "Venusaur",
    "Charmander",
    "Charmeleon",
    "Charizard",
    "Squirtle",
    "Wartortle",
    "Blastoise",
    "Caterpie",
    "Metapod",
    "Butterfree",
    "Weedle",
    "Kakuna",
    "Beedrill",
    "Pidgey",
    "Pidgeotto",
    "Pidgeot",
    "Rattata",
    "Raticate",
    "Spearow",
    "Fearow",
    "Ekans",
    "Arbok",
    "Pikachu",
    "Raichu",
    "Sandshrew",
    "Sandslash",
    "Nidoran-F",
    "Nidorina",
    "Nidoqueen",
    "Nidoran-M",
    "Nidorino",
    "Nidoking",
    "Clefairy",
    "Clefable",
    "Vulpix",
    "Ninetales",
    "Jigglypuff",
    "Wigglytuff",
    "Zubat",
    "Golbat",
    "Oddish",
    "Gloom",
    "Vileplume",
    "Paras",
    "Parasect",
    "Venonat",
    "Venomoth",
    "Diglett",
    "Dugtrio",
    "Meowth",
    "Persian",
    "Psyduck",
    "Golduck",
    "Mankey",
    "Primeape",
    "Growlithe",
    "Arcanine",
    "Poliwag",
    "Poliwhirl",
    "Poliwrath",
    "Abra",
    "Kadabra",
    "Alakazam",
    "Machop",
    "Machoke",
    "Machamp",
    "Bellsprout",
    "Weepinbell",
    "Victreebel",
    "Tentacool",
    "Tentacruel",
    "Geodude",
    "Graveler",
    "Golem",
    "Ponyta",
    "Rapidash",
    "Slowpoke",
    "Slowbro",
    "Magnemite",
    "Magneton",
    "Farfetchd",
    "Doduo",
    "Dodrio",
    "Seel",
    "Dewgong",
    "Grimer",
    "Muk",
    "Shellder",
    "Cloyster",
    "Gastly",
    "Haunter",
    "Gengar",
    "Onix",
    "Drowzee",
    "Hypno",
    "Krabby",
    "Kingler",
    "Voltorb",
    "Electrode",
    "Exeggcute",
    "Exeggutor",
    "Cubone",
    "Marowak",
    "Hitmonlee",
    "Hitmonchan",
    "Lickitung",
    "Koffing",
    "Weezing",
    "Rhyhorn",
    "Rhydon",
    "Chansey",
    "Tangela",
    "Kangaskhan",
    "Horsea",
    "Seadra",
    "Goldeen",
    "Seaking",
    "Staryu",
    "Starmie",
    "Mr. Mime",
    "Scyther",
    "Jynx",
    "Electabuzz",
    "Magmar",
    "Pinsir",
    "Tauros",
    "Magikarp",
    "Gyarados",
    "Lapras",
    "Ditto",
    "Eevee",
    "Vaporeon",
    "Jolteon",
    "Flareon",
    "Porygon",
    "Omanyte",
    "Omastar",
    "Kabuto",
    "Kabutops",
    "Aerodactyl",
    "Snorlax",
    "Articuno",
    "Zapdos",
    "Moltres",
    "Dratini",
    "Dragonair",
    "Dragonite",
    "Mewtwo",
    "Mew",
    "Chikorita",
    "Bayleef",
    "Meganium",
    "Cyndaquil",
    "Quilava",
    "Typhlosion",
    "Totodile",
    "Croconaw",
    "Feraligatr",
    "Sentret",
    "Furret",
    "Hoothoot",
    "Noctowl",
    "Ledyba",
    "Ledian",
    "Spinarak",
    "Ariados",
    "Crobat",
    "Chinchou",
    "Lanturn",
    "Pichu",
    "Cleffa",
    "Igglybuff",
    "Togepi",
    "Togetic",
    "Natu",
    "Xatu",
    "Mareep",
    "Flaaffy",
    "Ampharos",
    "Bellossom",
    "Marill",
    "Azumarill",
    "Sudowoodo",
    "Politoed",
    "Hoppip",
    "Skiploom",
    "Jumpluff",
    "Aipom",
    "Sunkern",
    "Sunflora",
    "Yanma",
    "Wooper",
    "Quagsire",
    "Espeon",
    "Umbreon",
    "Murkrow",
    "Slowking",
    "Misdreavus",
    "Unown",
    "Wobbuffet",
    "Girafarig",
    "Pineco",
    "Forretress",
    "Dunsparce",
    "Gligar",
    "Steelix",
    "Snubbull",
    "Granbull",
    "Qwilfish",
    "Scizor",
    "Shuckle",
    "Heracross",
    "Sneasel",
    "Teddiursa",
    "Ursaring",
    "Slugma",
    "Magcargo",
    "Swinub",
    "Piloswine",
    "Corsola",
    "Remoraid",
    "Octillery",
    "Delibird",
    "Mantine",
    "Skarmory",
    "Houndour",
    "Houndoom",
    "Kingdra",
    "Phanpy",
    "Donphan",
    "Porygon2",
    "Stantler",
    "Smeargle",
    "Tyrogue",
    "Hitmontop",
    "Smoochum",
    "Elekid",
    "Magby",
    "Miltank",
    "Blissey",
    "Raikou",
    "Entei",
    "Suicune",
    "Larvitar",
    "Pupitar",
    "Tyranitar",
    "Lugia",
    "Ho-Oh",
    "Celebi",
    "Treecko",
    "Grovyle",
    "Sceptile",
    "Torchic",
    "Combusken",
    "Blaziken",
    "Mudkip",
    "Marshtomp",
    "Swampert",
    "Poochyena",
    "Mightyena",
    "Zigzagoon",
    "Linoone",
    "Wurmple",
    "Silcoon",
    "Beautifly",
    "Cascoon",
    "Dustox",
    "Lotad",
    "Lombre",
    "Ludicolo",
    "Seedot",
    "Nuzleaf",
    "Shiftry",
    "Taillow",
    "Swellow",
    "Wingull",
    "Pelipper",
    "Ralts",
    "Kirlia",
    "Gardevoir",
    "Surskit",
    "Masquerain",
    "Shroomish",
    "Breloom",
    "Slakoth",
    "Vigoroth",
    "Slaking",
    "Nincada",
    "Ninjask",
    "Shedinja",
    "Whismur",
    "Loudred",
    "Exploud",
    "Makuhita",
    "Hariyama",
    "Azurill",
    "Nosepass",
    "Skitty",
    "Delcatty",
    "Sableye",
    "Mawile",
    "Aron",
    "Lairon",
    "Aggron",
    "Meditite",
    "Medicham",
    "Electrike",
    "Manectric",
    "Plusle",
    "Minun",
    "Volbeat",
    "Illumise",
    "Roselia",
    "Gulpin",
    "Swalot",
    "Carvanha",
    "Sharpedo",
    "Wailmer",
    "Wailord",
    "Numel",
    "Camerupt",
    "Torkoal",
    "Spoink",
    "Grumpig",
    "Spinda",
    "Trapinch",
    "Vibrava",
    "Flygon",
    "Cacnea",
    "Cacturne",
    "Swablu",
    "Altaria",
    "Zangoose",
    "Seviper",
    "Lunatone",
    "Solrock",
    "Barboach",
    "Whiscash",
    "Corphish",
    "Crawdaunt",
    "Baltoy",
    "Claydol",
    "Lileep",
    "Cradily",
    "Anorith",
    "Armaldo",
    "Feebas",
    "Milotic",
    "Castform-Normal",
    "Kecleon",
    "Shuppet",
    "Banette",
    "Duskull",
    "Dusclops",
    "Tropius",
    "Chimecho",
    "Absol",
    "Wynaut",
    "Snorunt",
    "Glalie",
    "Spheal",
    "Sealeo",
    "Walrein",
    "Clamperl",
    "Huntail",
    "Gorebyss",
    "Relicanth",
    "Luvdisc",
    "Bagon",
    "Shelgon",
    "Salamence",
    "Beldum",
    "Metang",
    "Metagross",
    "Regirock",
    "Regice",
    "Registeel",
    "Latias",
    "Latios",
    "Kyogre",
    "Groudon",
    "Rayquaza",
    "Jirachi",
    "Deoxys-Normal",
    "Turtwig",
    "Grotle",
    "Torterra",
    "Chimchar",
    "Monferno",
    "Infernape",
    "Piplup",
    "Prinplup",
    "Empoleon",
    "Starly",
    "Staravia",
    "Staraptor",
    "Bidoof",
    "Bibarel",
    "Kricketot",
    "Kricketune",
    "Shinx",
    "Luxio",
    "Luxray",
    "Budew",
    "Roserade",
    "Cranidos",
    "Rampardos",
    "Shieldon",
    "Bastiodon",
    "Burmy-Plant-Cloak",
    "Wormadam-Plant-Cloak",
    "Mothim",
    "Combee",
    "Vespiquen",
    "Pachirisu",
    "Buizel",
    "Floatzel",
    "Cherubi",
    "Cherrim-Overcast",
    "Shellos",
    "Gastrodon",
    "Ambipom",
    "Drifloon",
    "Drifblim",
    "Buneary",
    "Lopunny",
    "Mismagius",
    "Honchkrow",
    "Glameow",
    "Purugly",
    "Chingling",
    "Stunky",
    "Skuntank",
    "Bronzor",
    "Bronzong",
    "Bonsly",
    "Mime Jr.",
    "Happiny",
    "Chatot",
    "Spiritomb",
    "Gible",
    "Gabite",
    "Garchomp",
    "Munchlax",
    "Riolu",
    "Lucario",
    "Hippopotas",
    "Hippowdon",
    "Skorupi",
    "Drapion",
    "Croagunk",
    "Toxicroak",
    "Carnivine",
    "Finneon",
    "Lumineon",
    "Mantyke",
    "Snover",
    "Abomasnow",
    "Weavile",
    "Magnezone",
    "Lickilicky",
    "Rhyperior",
    "Tangrowth",
    "Electivire",
    "Magmortar",
    "Togekiss",
    "Yanmega",
    "Leafeon",
    "Glaceon",
    "Gliscor",
    "Mamoswine",
    "Porygon-Z",
    "Gallade",
    "Probopass",
    "Dusknoir",
    "Froslass",
    "Rotom",
    "Uxie",
    "Mesprit",
    "Azelf",
    "Dialga",
    "Palkia",
    "Heatran",
    "Regigigas",
    "Giratina-Altered",
    "Cresselia",
    "Phione",
    "Manaphy",
    "Darkrai",
    "Shaymin-Land",
    "Arceus-Normal",
    "Victini",
    "Snivy",
    "Servine",
    "Serperior",
    "Tepig",
    "Pignite",
    "Emboar",
    "Oshawott",
    "Dewott",
    "Samurott",
    "Patrat",
    "Watchog",
    "Lillipup",
    "Herdier",
    "Stoutland",
    "Purrloin",
    "Liepard",
    "Pansage",
    "Simisage",
    "Pansear",
    "Simisear",
    "Panpour",
    "Simipour",
    "Munna",
    "Musharna",
    "Pidove",
    "Tranquill",
    "Unfezant",
    "Blitzle",
    "Zebstrika",
    "Roggenrola",
    "Boldore",
    "Gigalith",
    "Woobat",
    "Swoobat",
    "Drilbur",
    "Excadrill",
    "Audino",
    "Timburr",
    "Gurdurr",
    "Conkeldurr",
    "Tympole",
    "Palpitoad",
    "Seismitoad",
    "Throh",
    "Sawk",
    "Sewaddle",
    "Swadloon",
    "Leavanny",
    "Venipede",
    "Whirlipede",
    "Scolipede",
    "Cottonee",
    "Whimsicott",
    "Petilil",
    "Lilligant",
    "Basculin",
    "Sandile",
    "Krokorok",
    "Krookodile",
    "Darumaka",
    "Darmanitan-Standard-Mode",
    "Maractus",
    "Dwebble",
    "Crustle",
    "Scraggy",
    "Scrafty",
    "Sigilyph",
    "Yamask",
    "Cofagrigus",
    "Tirtouga",
    "Carracosta",
    "Archen",
    "Archeops",
    "Trubbish",
    "Garbodor",
    "Zorua",
    "Zoroark",
    "Minccino",
    "Cinccino",
    "Gothita",
    "Gothorita",
    "Gothitelle",
    "Solosis",
    "Duosion",
    "Reuniclus",
    "Ducklett",
    "Swanna",
    "Vanillite",
    "Vanillish",
    "Vanilluxe",
    "Deerling",
    "Sawsbuck",
    "Emolga",
    "Karrablast",
    "Escavalier",
    "Foongus",
    "Amoonguss",
    "Frillish",
    "Jellicent",
    "Alomomola",
    "Joltik",
    "Galvantula",
    "Ferroseed",
    "Ferrothorn",
    "Klink",
    "Klang",
    "Klinklang",
    "Tynamo",
    "Eelektrik",
    "Eelektross",
    "Elgyem",
    "Beheeyem",
    "Litwick",
    "Lampent",
    "Chandelure",
    "Axew",
    "Fraxure",
    "Haxorus",
    "Cubchoo",
    "Beartic",
    "Cryogonal",
    "Shelmet",
    "Accelgor",
    "Stunfisk",
    "Mienfoo",
    "Mienshao",
    "Druddigon",
    "Golett",
    "Golurk",
    "Pawniard",
    "Bisharp",
    "Bouffalant",
    "Rufflet",
    "Braviary",
    "Vullaby",
    "Mandibuzz",
    "Heatmor",
    "Durant",
    "Deino",
    "Zweilous",
    "Hydreigon",
    "Larvesta",
    "Volcarona",
    "Cobalion",
    "Terrakion",
    "Virizion",
    "Tornadus",
    "Thundurus",
    "Reshiram",
    "Zekrom",
    "Landorus",
    "Kyurem",
    "Keldeo-Ordinary",
    "Meloetta-Aria",
    "Genesect",
    "Chespin",
    "Quilladin",
    "Chesnaught",
    "Fennekin",
    "Braixen",
    "Delphox",
    "Froakie",
    "Frogadier",
    "Greninja",
    "Bunnelby",
    "Diggersby",
    "Fletchling",
    "Fletchinder",
    "Talonflame",
    "Scatterbug",
    "Spewpa",
    "Vivillon",
    "Litleo",
    "Pyroar",
    "Flabebe-Red-Flower",
    "Floette-Red-Flower",
    "Florges-Red-Flower",
    "Skiddo",
    "Gogoat",
    "Pancham",
    "Pangoro",
    "Furfrou-Natural",
    "Espurr",
    "Meowstic",
    "Honedge",
    "Doublade",
    "Aegislash-Shield",
    "Spritzee",
    "Aromatisse",
    "Swirlix",
    "Slurpuff",
    "Inkay",
    "Malamar",
    "Binacle",
    "Barbaracle",
    "Skrelp",
    "Dragalge",
    "Clauncher",
    "Clawitzer",
    "Helioptile",
    "Heliolisk",
    "Tyrunt",
    "Tyrantrum",
    "Amaura",
    "Aurorus",
    "Sylveon",
    "Hawlucha",
    "Dedenne",
    "Carbink",
    "Goomy",
    "Sliggoo",
    "Goodra",
    "Klefki",
    "Phantump",
    "Trevenant",
    "Pumpkaboo-Average",
    "Gourgeist-Average",
    "Bergmite",
    "Avalugg",
    "Noibat",
    "Noivern",
    "Xerneas-Neutral",
    "Yveltal",
    "Zygarde-50-Aura-Break",
    "Diancie",
    "Hoopa-Confined",
    "Volcanion",
    "Rowlet",
    "Dartrix",
    "Decidueye",
    "Litten",
    "Torracat",
    "Incineroar",
    "Popplio",
    "Brionne",
    "Primarina",
    "Pikipek",
    "Trumbeak",
    "Toucannon",
    "Yungoos",
    "Gumshoos",
    "Grubbin",
    "Charjabug",
    "Vikavolt",
    "Crabrawler",
    "Crabominable",
    "Oricorio-Baile",
    "Cutiefly",
    "Ribombee",
    "Rockruff",
    "Lycanroc",
    "Wishiwashi",
    "Mareanie",
    "Toxapex",
    "Mudbray",
    "Mudsdale",
    "Dewpider",
    "Araquanid",
    "Fomantis",
    "Lurantis",
    "Morelull",
    "Shiinotic",
    "Salandit",
    "Salazzle",
    "Stufful",
    "Bewear",
    "Bounsweet",
    "Steenee",
    "Tsareena",
    "Comfey",
    "Oranguru",
    "Passimian",
    "Wimpod",
    "Golisopod",
    "Sandygast",
    "Palossand",
    "Pyukumuku",
    "Type-Null",
    "Silvally-Normal",
    "Minior-Meteor-Red",
    "Komala",
    "Turtonator",
    "Togedemaru",
    "Mimikyu-Disguised",
    "Bruxish",
    "Drampa",
    "Dhelmise",
    "Jangmo-o",
    "Hakamo-o",
    "Kommo-o",
    "Tapu Koko",
    "Tapu Lele",
    "Tapu Bulu",
    "Tapu Fini",
    "Cosmog",
    "Cosmoem",
    "Solgaleo",
    "Lunala",
    "Nihilego",
    "Buzzwole",
    "Pheromosa",
    "Xurkitree",
    "Celesteela",
    "Kartana",
    "Guzzlord",
    "Necrozma",
    "Magearna",
    "Marshadow",
    "Poipole",
    "Naganadel",
    "Stakataka",
    "Blacephalon",
    "Zeraora",
    "Meltan",
    "Melmetal",
    "Grookey",
    "Thwackey",
    "Rillaboom",
    "Scorbunny",
    "Raboot",
    "Cinderace",
    "Sobble",
    "Drizzile",
    "Inteleon",
    "Skwovet",
    "Greedent",
    "Rookidee",
    "Corvisquire",
    "Corviknight",
    "Blipbug",
    "Dottler",
    "Orbeetle",
    "Nickit",
    "Thievul",
    "Gossifleur",
    "Eldegoss",
    "Wooloo",
    "Dubwool",
    "Chewtle",
    "Drednaw",
    "Yamper",
    "Boltund",
    "Rolycoly",
    "Carkol",
    "Coalossal",
    "Applin",
    "Flapple",
    "Appletun",
    "Silicobra",
    "Sandaconda",
    "Cramorant",
    "Arrokuda",
    "Barraskewda",
    "Toxel",
    "Toxtricity",
    "Sizzlipede",
    "Centiskorch",
    "Clobbopus",
    "Grapploct",
    "Sinistea-Phony",
    "Polteageist-Phony",
    "Hatenna",
    "Hattrem",
    "Hatterene",
    "Impidimp",
    "Morgrem",
    "Grimmsnarl",
    "Obstagoon",
    "Perrserker",
    "Cursola",
    "Sirfetch’d",
    "Mr. Rime",
    "Runerigus",
    "Milcery",
    "Alcremie-Strawberry-Vanilla-Cream",
    "Falinks",
    "Pincurchin",
    "Snom",
    "Frosmoth",
    "Stonjourner",
    "Eiscue-Ice-Face",
    "Indeedee-Male",
    "Morpeko-Full-Belly",
    "Cufant",
    "Copperajah",
    "Dracozolt",
    "Arctozolt",
    "Dracovish",
    "Arctovish",
    "Duraludon",
    "Dreepy",
    "Drakloak",
    "Dragapult",
    "Zacian-Hero-Of-Many-Battles",
    "Zamazenta-Hero-Of-Many-Battles",
    "Eternatus",
    "Kubfu",
    "Urshifu-Single-Strike-Style",
    "Zarude",
    "Regieleki",
    "Regidrago",
    "Glastrier",
    "Spectrier",
    "Calyrex",
    "Wyrdeer",
    "Kleavor",
    "Ursaluna",
    "Basculegion",
    "Sneasler",
    "Overqwil",
    "Enamorus",
    "Venusaur-Mega",
    "Charizard-Mega-X",
    "Charizard-Mega-Y",
    "Blastoise-Mega",
    "Beedrill-Mega",
    "Pidgeot-Mega",
    "Alakazam-Mega",
    "Slowbro-Mega",
    "Gengar-Mega",
    "Kangaskhan-Mega",
    "Pinsir-Mega",
    "Gyarados-Mega",
    "Aerodactyl-Mega",
    "Mewtwo-Mega-X",
    "Mewtwo-Mega-Y",
    "Ampharos-Mega",
    "Steelix-Mega",
    "Scizor-Mega",
    "Heracross-Mega",
    "Houndoom-Mega",
    "Tyranitar-Mega",
    "Sceptile-Mega",
    "Blaziken-Mega",
    "Swampert-Mega",
    "Gardevoir-Mega",
    "Sableye-Mega",
    "Mawile-Mega",
    "Aggron-Mega",
    "Medicham-Mega",
    "Manectric-Mega",
    "Sharpedo-Mega",
    "Camerupt-Mega",
    "Altaria-Mega",
    "Banette-Mega",
    "Absol-Mega",
    "Glalie-Mega",
    "Salamence-Mega",
    "Metagross-Mega",
    "Latias-Mega",
    "Latios-Mega",
    "Lopunny-Mega",
    "Garchomp-Mega",
    "Lucario-Mega",
    "Abomasnow-Mega",
    "Gallade-Mega",
    "Audino-Mega",
    "Diancie-Mega",
    "Rayquaza-Mega",
    "Kyogre-Primal",
    "Groudon-Primal",
    "Rattata-Alola",
    "Raticate-Alola",
    "Raichu-Alola",
    "Sandshrew-Alola",
    "Sandslash-Alola",
    "Vulpix-Alola",
    "Ninetales-Alola",
    "Diglett-Alola",
    "Dugtrio-Alola",
    "Meowth-Alola",
    "Persian-Alola",
    "Geodude-Alola",
    "Graveler-Alola",
    "Golem-Alola",
    "Grimer-Alola",
    "Muk-Alola",
    "Exeggutor-Alola",
    "Marowak-Alola",
    "Meowth-Galar",
    "Ponyta-Galar",
    "Rapidash-Galar",
    "Slowpoke-Galar",
    "Slowbro-Galar",
    "Farfetchd-Galar",
    "Weezing-Galar",
    "Mr. Mime-Galar",
    "Articuno-Galar",
    "Zapdos-Galar",
    "Moltres-Galar",
    "Slowking-Galar",
    "Corsola-Galar",
    "Zigzagoon-Galar",
    "Linoone-Galar",
    "Darumaka-Galar",
    "Darmanitan-Galar-Standard-Mode",
    "Yamask-Galar",
    "Stunfisk-Galar",
    "Growlithe-Hisui",
    "Arcanine-Hisui",
    "Voltorb-Hisui",
    "Electrode-Hisui",
    "Typhlosion-Hisui",
    "Qwilfish-Hisui",
    "Sneasel-Hisui",
    "Samurott-Hisui",
    "Lilligant-Hisui",
    "Zorua-Hisui",
    "Zoroark-Hisui",
    "Braviary-Hisui",
    "Sliggoo-Hisui",
    "Goodra-Hisui",
    "Avalugg-Hisui",
    "Decidueye-Hisui",
    "Pikachu-Cosplay",
    "Pikachu-Rock-Star",
    "Pikachu-Belle",
    "Pikachu-Pop-Star",
    "Pikachu-Ph-D",
    "Pikachu-Libre",
    "Pikachu-Original-Cap",
    "Pikachu-Hoenn-Cap",
    "Pikachu-Sinnoh-Cap",
    "Pikachu-Unova-Cap",
    "Pikachu-Kalos-Cap",
    "Pikachu-Alola-Cap",
    "Pikachu-Partner-Cap",
    "Pikachu-World-Cap",
    "Pichu-Spiky-Eared",
    "Unown-B",
    "Unown-C",
    "Unown-D",
    "Unown-E",
    "Unown-F",
    "Unown-G",
    "Unown-H",
    "Unown-I",
    "Unown-J",
    "Unown-K",
    "Unown-L",
    "Unown-M",
    "Unown-N",
    "Unown-O",
    "Unown-P",
    "Unown-Q",
    "Unown-R",
    "Unown-S",
    "Unown-T",
    "Unown-U",
    "Unown-V",
    "Unown-W",
    "Unown-X",
    "Unown-Y",
    "Unown-Z",
    "Unown-Emark",
    "Unown-Qmark",
    "Castform-Sunny",
    "Castform-Rainy",
    "Castform-Snowy",
    "Deoxys-Attack",
    "Deoxys-Defense",
    "Deoxys-Speed",
    "Burmy-Sandy-Cloak",
    "Burmy-Trash-Cloak",
    "Wormadam-Sandy-Cloak",
    "Wormadam-Trash-Cloak",
    "Cherrim-Sunshine",
    "Shellos",
    "Gastrodon",
    "Rotom-Heat",
    "Rotom-Wash",
    "Rotom-Frost",
    "Rotom-Fan",
    "Rotom-Mow",
    "Dialga-Origin",
    "Palkia-Origin",
    "Giratina-Origin",
    "Shaymin-Sky",
    "Arceus-Fighting",
    "Arceus-Flying",
    "Arceus-Poison",
    "Arceus-Ground",
    "Arceus-Rock",
    "Arceus-Bug",
    "Arceus-Ghost",
    "Arceus-Steel",
    "Arceus-Fire",
    "Arceus-Water",
    "Arceus-Grass",
    "Arceus-Electric",
    "Arceus-Psychic",
    "Arceus-Ice",
    "Arceus-Dragon",
    "Arceus-Dark",
    "Arceus-Fairy",
    "Basculin-Blue-Striped",
    "Basculin-White-Striped",
    "Darmanitan-Zen-Mode",
    "Darmanitan-Galar-Zen-Mode",
    "Deerling-Summer",
    "Deerling-Autumn",
    "Deerling-Winter",
    "Sawsbuck-Summer",
    "Sawsbuck-Autumn",
    "Sawsbuck-Winter",
    "Tornadus-Therian",
    "Thundurus-Therian",
    "Landorus-Therian",
    "Enamorus-Therian",
    "Kyurem-White",
    "Kyurem-Black",
    "Keldeo-Resolute",
    "Meloetta-Pirouette",
    "Genesect-Douse-Drive",
    "Genesect-Shock-Drive",
    "Genesect-Burn-Drive",
    "Genesect-Chill-Drive",
    "Greninja-Battle-Bond",
    "Greninja-Ash",
    "Vivillon",
    "Vivillon",
    "Vivillon",
    "Vivillon",
    "Vivillon",
    "Vivillon",
    "Vivillon",
    "Vivillon",
    "Vivillon",
    "Vivillon",
    "Vivillon",
    "Vivillon",
    "Vivillon",
    "Vivillon",
    "Vivillon",
    "Vivillon",
    "Vivillon",
    "Vivillon",
    "Vivillon",
    "Flabebe-Yellow-Flower",
    "Flabebe-Orange-Flower",
    "Flabebe-Blue-Flower",
    "Flabebe-White-Flower",
    "Floette-Yellow-Flower",
    "Floette-Orange-Flower",
    "Floette-Blue-Flower",
    "Floette-White-Flower",
    "Floette-Eternal-Flower",
    "Florges-Yellow-Flower",
    "Florges-Orange-Flower",
    "Florges-Blue-Flower",
    "Florges-White-Flower",
    "Furfrou-Heart-Trim",
    "Furfrou-Star-Trim",
    "Furfrou-Diamond-Trim",
    "Furfrou-Debutante-Trim",
    "Furfrou-Matron-Trim",
    "Furfrou-Dandy-Trim",
    "Furfrou-La-Reine-Trim",
    "Furfrou-Kabuki-Trim",
    "Furfrou-Pharaoh-Trim",
    "Meowstic-F",
    "Aegislash-Blade",
    "Pumpkaboo-Small",
    "Pumpkaboo-Large",
    "Pumpkaboo-Super",
    "Gourgeist-Small",
    "Gourgeist-Large",
    "Gourgeist-Super",
    "Xerneas-Active",
    "Zygarde-10-Aura-Break",
    "Zygarde-10-Power-Construct",
    "Zygarde-50-Power-Construct",
    "Zygarde-Complete",
    "Hoopa-Unbound",
    "Oricorio-Pom-Pom",
    "Oricorio-Pau",
    "Oricorio-Sensu",
    "Rockruff-Own-Tempo",
    "Lycanroc-Midnight",
    "Lycanroc-Dusk",
    "Wishiwashi-School",
    "Silvally-Fighting",
    "Silvally-Flying",
    "Silvally-Poison",
    "Silvally-Ground",
    "Silvally-Rock",
    "Silvally-Bug",
    "Silvally-Ghost",
    "Silvally-Steel",
    "Silvally-Fire",
    "Silvally-Water",
    "Silvally-Grass",
    "Silvally-Electric",
    "Silvally-Psychic",
    "Silvally-Ice",
    "Silvally-Dragon",
    "Silvally-Dark",
    "Silvally-Fairy",
    "Minior-Meteor-Orange",
    "Minior-Meteor-Yellow",
    "Minior-Meteor-Green",
    "Minior-Meteor-Blue",
    "Minior-Meteor-Indigo",
    "Minior-Meteor-Violet",
    "Minior-Core-Red",
    "Minior-Core-Orange",
    "Minior-Core-Yellow",
    "Minior-Core-Green",
    "Minior-Core-Blue",
    "Minior-Core-Indigo",
    "Minior-Core-Violet",
    "Mimikyu-Busted",
    "Necrozma-Dusk-Mane",
    "Necrozma-Dawn-Wings",
    "Necrozma-Ultra",
    "Magearna-Original-Color",
    "Cramorant-Gulping",
    "Cramorant-Gorging",
    "Toxtricity",
    "Sinistea-Antique",
    "Polteageist-Antique",
    "Alcremie-Strawberry-Ruby-Cream",
    "Alcremie-Strawberry-Matcha-Cream",
    "Alcremie-Strawberry-Mint-Cream",
    "Alcremie-Strawberry-Lemon-Cream",
    "Alcremie-Strawberry-Salted-Cream",
    "Alcremie-Strawberry-Ruby-Swirl",
    "Alcremie-Strawberry-Caramel-Swirl",
    "Alcremie-Strawberry-Rainbow-Swirl",
    "Eiscue-Noice-Face",
    "Indeedee-Female",
    "Morpeko-Hangry",
    "Zacian-Crowned-Sword",
    "Zamazenta-Crowned-Shield",
    "Eternatus-Eternamax",
    "Urshifu-Rapid-Strike-Style",
    "Zarude-Dada",
    "Calyrex-Ice-Rider",
    "Calyrex-Shadow-Rider",
    "Basculegion-F",
    "Alcremie-Berry-Vanilla-Cream",
    "Alcremie-Berry-Ruby-Cream",
    "Alcremie-Berry-Matcha-Cream",
    "Alcremie-Berry-Mint-Cream",
    "Alcremie-Berry-Lemon-Cream",
    "Alcremie-Berry-Salted-Cream",
    "Alcremie-Berry-Ruby-Swirl",
    "Alcremie-Berry-Caramel-Swirl",
    "Alcremie-Berry-Rainbow-Swirl",
    "Alcremie-Love-Vanilla-Cream",
    "Alcremie-Love-Ruby-Cream",
    "Alcremie-Love-Matcha-Cream",
    "Alcremie-Love-Mint-Cream",
    "Alcremie-Love-Lemon-Cream",
    "Alcremie-Love-Salted-Cream",
    "Alcremie-Love-Ruby-Swirl",
    "Alcremie-Love-Caramel-Swirl",
    "Alcremie-Love-Rainbow-Swirl",
    "Alcremie-Star-Vanilla-Cream",
    "Alcremie-Star-Ruby-Cream",
    "Alcremie-Star-Matcha-Cream",
    "Alcremie-Star-Mint-Cream",
    "Alcremie-Star-Lemon-Cream",
    "Alcremie-Star-Salted-Cream",
    "Alcremie-Star-Ruby-Swirl",
    "Alcremie-Star-Caramel-Swirl",
    "Alcremie-Star-Rainbow-Swirl",
    "Alcremie-Clover-Vanilla-Cream",
    "Alcremie-Clover-Ruby-Cream",
    "Alcremie-Clover-Matcha-Cream",
    "Alcremie-Clover-Mint-Cream",
    "Alcremie-Clover-Lemon-Cream",
    "Alcremie-Clover-Salted-Cream",
    "Alcremie-Clover-Ruby-Swirl",
    "Alcremie-Clover-Caramel-Swirl",
    "Alcremie-Clover-Rainbow-Swirl",
    "Alcremie-Flower-Vanilla-Cream",
    "Alcremie-Flower-Ruby-Cream",
    "Alcremie-Flower-Matcha-Cream",
    "Alcremie-Flower-Mint-Cream",
    "Alcremie-Flower-Lemon-Cream",
    "Alcremie-Flower-Salted-Cream",
    "Alcremie-Flower-Ruby-Swirl",
    "Alcremie-Flower-Caramel-Swirl",
    "Alcremie-Flower-Rainbow-Swirl",
    "Alcremie-Ribbon-Vanilla-Cream",
    "Alcremie-Ribbon-Ruby-Cream",
    "Alcremie-Ribbon-Matcha-Cream",
    "Alcremie-Ribbon-Mint-Cream",
    "Alcremie-Ribbon-Lemon-Cream",
    "Alcremie-Ribbon-Salted-Cream",
    "Alcremie-Ribbon-Ruby-Swirl",
    "Alcremie-Ribbon-Caramel-Swirl",
    "Alcremie-Ribbon-Rainbow-Swirl",
    "Sprigatito",
    "Floragato",
    "Meowscarada",
    "Fuecoco",
    "Crocalor",
    "Skeledirge",
    "Quaxly",
    "Quaxwell",
    "Quaquaval",
    "Lechonk",
    "Oinkologne",
    "Oinkologne-F",
    "Tarountula",
    "Spidops",
    "Nymble",
    "Lokix",
    "Pawmi",
    "Pawmo",
    "Pawmot",
    "Tandemaus",
    "Maushold-Family-Of-Three",
    "Maushold-Family-Of-Four",
    "Fidough",
    "Dachsbun",
    "Smoliv",
    "Dolliv",
    "Arboliva",
    "Squawkabilly-Green-Plumage",
    "Squawkabilly-Blue-Plumage",
    "Squawkabilly-Yellow-Plumage",
    "Squawkabilly-White-Plumage",
    "Nacli",
    "Naclstack",
    "Garganacl",
    "Charcadet",
    "Armarouge",
    "Ceruledge",
    "Tadbulb",
    "Bellibolt",
    "Wattrel",
    "Kilowattrel",
    "Maschiff",
    "Mabosstiff",
    "Shroodle",
    "Grafaiai",
    "Bramblin",
    "Brambleghast",
    "Toedscool",
    "Toedscruel",
    "Klawf",
    "Capsakid",
    "Scovillain",
    "Rellor",
    "Rabsca",
    "Flittle",
    "Espathra",
    "Tinkatink",
    "Tinkatuff",
    "Tinkaton",
    "Wiglett",
    "Wugtrio",
    "Bombirdier",
    "Finizen",
    "Palafin-Zero",
    "Palafin-Hero",
    "Varoom",
    "Revavroom",
    "Cyclizar",
    "Orthworm",
    "Glimmet",
    "Glimmora",
    "Greavard",
    "Houndstone",
    "Flamigo",
    "Cetoddle",
    "Cetitan",
    "Veluza",
    "Dondozo",
    "Tatsugiri",
    "Tatsugiri",
    "Tatsugiri",
    "Annihilape",
    "Clodsire",
    "Farigiraf",
    "Dudunsparce",
    "Dudunsparce",
    "Kingambit",
    "Great Tusk",
    "Scream Tail",
    "Brute Bonnet",
    "Flutter Mane",
    "Slither Wing",
    "Sandy Shocks",
    "Iron Treads",
    "Iron Bundle",
    "Iron Hands",
    "Iron Jugulis",
    "Iron Moth",
    "Iron Thorns",
    "Frigibax",
    "Arctibax",
    "Baxcalibur",
    "Gimmighoul-Chest",
    "Gimmighoul-Roaming",
    "Gholdengo",
    "Wo-Chien",
    "Chien-Pao",
    "Ting-Lu",
    "Chi-Yu",
    "Roaring Moon",
    "Iron Valiant",
    "Koraidon",
    "Miraidon",
    "Tauros-Paldea-Combat",
    "Tauros-Paldea-Blaze",
    "Tauros-Paldea-Aqua",
    "Wooper-Paldea",
    "Walking Wake",
    "Iron Leaves",
    "Dipplin",
    "Poltchageist",
    "Poltchageist",
    "Sinistcha",
    "Sinistcha",
    "Okidogi",
    "Munkidori",
    "Fezandipiti",
    "Ogerpon",
    "Ogerpon-Wellspring",
    "Ogerpon-Hearthflame",
    "Ogerpon-Cornerstone",
    "Ogerpon-Teal-Mask-Tera",
    "Ogerpon-Wellspring-Mask-Tera",
    "Ogerpon-Hearthflame-Mask-Tera",
    "Ogerpon-Cornerstone-Mask-Tera",
    "Ursaluna-Bloodmoon",
    "Archaludon",
    "Hydrapple",
    "Gouging Fire",
    "Raging Bolt",
    "Iron Boulder",
    "Iron Crown",
    "Terapagos-Normal",
    "Terapagos-Terastal",
    "Terapagos-Stellar",
    "Pecharunt"
}

--Start configOverlayPokemon

-- Companion: remove Route 100
metLocation = {
    "Littleroot Town",
    "Oldale Town",
    "Dewford Town",
    "Lavaridge Town",
    "Fallarbor Town",
    "Verdanturf Town",
    "Pacifidlog Town",
    "Petalburg City",
    "Slateport City",
    "Mauville City",
    "Rustboro City",
    "Fortree City",
    "Lilycove City",
    "Mossdeep City",
    "Sootopolis City",
    "Ever Grande City",
    "Route 100",
    "Route 101",
    "Route 102",
    "Route 103",
    "Route 104",
    "Route 105",
    "Route 106",
    "Route 107",
    "Route 108",
    "Route 109",
    "Route 110",
    "Route 111",
    "Route 112",
    "Route 113",
    "Route 114",
    "Route 115",
    "Route 116",
    "Route 117",
    "Route 118",
    "Route 119",
    "Route 120",
    "Route 121",
    "Route 122",
    "Route 123",
    "Route 124",
    "Route 125",
    "Route 126",
    "Route 127",
    "Route 128",
    "Route 129",
    "Route 130",
    "Route 131",
    "Route 132",
    "Route 133",
    "Route 134",
    "Underwater 124",
    "Underwater 126",
    "Underwater 127",
    "Underwater 128",
    "Underwater Sootopolis",
    "Granite Cave",
    "Mt Chimney",
    "Safari Zone",
    "Battle Frontier",
    "Petalburg Woods",
    "Rusturf Tunnel",
    "Abandoned Ship",
    "New Mauville",
    "Meteor Falls",
    "Meteor Falls2",
    "Mt Pyre",
    "Aqua Hideout Old",
    "Shoal Cave",
    "Seafloor Cavern",
    "Underwater Seafloor Cavern",
    "Victory Road",
    "Mirage Island",
    "Cave Of Origin",
    "Southern Island",
    "Fiery Path",
    "Fiery Path2",
    "Jagged Pass",
    "Jagged Pass2",
    "Sealed Chamber",
    "Underwater Sealed Chamber",
    "Scorched Slab",
    "Island Cave",
    "Desert Ruins",
    "Ancient Tomb",
    "Inside Of Truck",
    "Sky Pillar",
    "Secret Base",
    "Dynamic",
    "Pallet Town",
    "Viridian City",
    "Pewter City",
    "Cerulean City",
    "Lavender Town",
    "Vermilion City",
    "Celadon City",
    "Fuchsia City",
    "Cinnabar Island",
    "Indigo Plateau",
    "Saffron City",
    "Route 4 Pokecenter",
    "Route 10 Pokecenter",
    "Route 1",
    "Route 2",
    "Route 3",
    "Route 4",
    "Route 5",
    "Route 6",
    "Route 7",
    "Route 8",
    "Route 9",
    "Route 10",
    "Route 11",
    "Route 12",
    "Route 13",
    "Route 14",
    "Route 15",
    "Route 16",
    "Route 17",
    "Route 18",
    "Route 19",
    "Route 20",
    "Route 21",
    "Route 22",
    "Route 23",
    "Route 24",
    "Route 25",
    "Viridian Forest",
    "Mt Moon",
    "S S Anne",
    "Underground Path",
    "Underground Path 2",
    "Digletts Cave",
    "Kanto Victory Road",
    "Rocket Hideout",
    "Silph Co",
    "Pokemon Mansion",
    "Kanto Safari Zone",
    "Pokemon League",
    "Rock Tunnel",
    "Seafoam Islands",
    "Pokemon Tower",
    "Cerulean Cave",
    "Power Plant",
    "One Island",
    "Two Island",
    "Three Island",
    "Four Island",
    "Five Island",
    "Seven Island",
    "Six Island",
    "Kindle Road",
    "Treasure Beach",
    "Cape Brink",
    "Bond Bridge",
    "Three Isle Port",
    "Sevii Isle 6",
    "Sevii Isle 7",
    "Sevii Isle 8",
    "Sevii Isle 9",
    "Resort Gorgeous",
    "Water Labyrinth",
    "Five Isle Meadow",
    "Memorial Pillar",
    "Outcast Island",
    "Green Path",
    "Water Path",
    "Ruin Valley",
    "Trainer Tower",
    "Canyon Entrance",
    "Sevault Canyon",
    "Tanoby Ruins",
    "Sevii Isle 22",
    "Sevii Isle 23",
    "Sevii Isle 24",
    "Navel Rock Frlg",
    "Mt Ember",
    "Berry Forest",
    "Icefall Cave",
    "Rocket Warehouse",
    "Trainer Tower 2",
    "Dotted Hole",
    "Lost Cave",
    "Pattern Bush",
    "Altering Cave Frlg",
    "Tanoby Chambers",
    "Three Isle Path",
    "Tanoby Key",
    "Birth Island Frlg",
    "Monean Chamber",
    "Liptoo Chamber",
    "Weepth Chamber",
    "Dilford Chamber",
    "Scufib Chamber",
    "Rixy Chamber",
    "Viapois Chamber",
    "Ember Spa",
    "Special Area",
    "Aqua Hideout",
    "Magma Hideout",
    "Mirage Tower",
    "Birth Island",
    "Faraway Island",
    "Artisan Cave",
    "Marine Cave",
    "Underwater Marine Cave",
    "Terra Cave",
    "Underwater 105",
    "Underwater 125",
    "Underwater 129",
    "Desert Underpass",
    "Altering Cave",
    "Navel Rock",
    "Trainer Hill"
}

dexNumber = {
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    10,
    11,
    12,
    13,
    14,
    15,
    16,
    17,
    18,
    19,
    20,
    21,
    22,
    23,
    24,
    25,
    26,
    27,
    28,
    29,
    30,
    31,
    22,
    33,
    34,
    35,
    36,
    37,
    38,
    39,
    40,
    41,
    42,
    43,
    44,
    45,
    46,
    47,
    48,
    49,
    50,
    51,
    52,
    53,
    54,
    55,
    56,
    57,
    58,
    59,
    60,
    61,
    62,
    63,
    64,
    65,
    66,
    67,
    68,
    69,
    70,
    71,
    72,
    73,
    74,
    75,
    76,
    77,
    78,
    79,
    80,
    81,
    82,
    83,
    84,
    85,
    86,
    87,
    88,
    89,
    90,
    91,
    92,
    93,
    94,
    95,
    96,
    97,
    98,
    99,
    100,
    101,
    102,
    103,
    104,
    105,
    106,
    107,
    108,
    109,
    110,
    111,
    112,
    113,
    114,
    115,
    116,
    117,
    118,
    119,
    120,
    121,
    122,
    123,
    124,
    125,
    126,
    127,
    128,
    129,
    130,
    131,
    132,
    133,
    134,
    135,
    136,
    137,
    138,
    139,
    140,
    141,
    142,
    143,
    144,
    145,
    146,
    147,
    148,
    149,
    150,
    151,
    152,
    153,
    154,
    155,
    156,
    157,
    158,
    159,
    160,
    161,
    162,
    163,
    164,
    165,
    166,
    167,
    168,
    169,
    170,
    171,
    172,
    173,
    174,
    175,
    176,
    177,
    178,
    179,
    180,
    181,
    182,
    183,
    184,
    185,
    186,
    187,
    188,
    189,
    190,
    191,
    192,
    193,
    194,
    195,
    196,
    197,
    198,
    199,
    200,
    201,
    202,
    203,
    204,
    205,
    206,
    207,
    208,
    209,
    210,
    211,
    212,
    213,
    214,
    215,
    216,
    217,
    218,
    219,
    220,
    221,
    222,
    223,
    224,
    225,
    226,
    227,
    228,
    229,
    230,
    231,
    232,
    233,
    234,
    235,
    236,
    237,
    238,
    239,
    240,
    241,
    242,
    243,
    244,
    245,
    246,
    247,
    248,
    249,
    250,
    251,
    252,
    253,
    254,
    255,
    256,
    257,
    258,
    259,
    260,
    261,
    262,
    263,
    264,
    265,
    266,
    267,
    268,
    269,
    270,
    271,
    272,
    273,
    274,
    275,
    276,
    277,
    278,
    279,
    280,
    281,
    282,
    283,
    284,
    285,
    286,
    287,
    288,
    289,
    290,
    291,
    292,
    293,
    294,
    295,
    296,
    297,
    298,
    299,
    300,
    301,
    302,
    303,
    304,
    305,
    306,
    307,
    308,
    309,
    310,
    311,
    312,
    313,
    314,
    315,
    316,
    317,
    318,
    319,
    320,
    321,
    322,
    323,
    324,
    325,
    326,
    327,
    328,
    329,
    330,
    331,
    332,
    333,
    334,
    335,
    336,
    337,
    338,
    339,
    340,
    341,
    342,
    343,
    344,
    345,
    346,
    347,
    348,
    349,
    350,
    351,
    352,
    353,
    354,
    355,
    356,
    357,
    358,
    359,
    360,
    361,
    362,
    363,
    364,
    365,
    366,
    367,
    368,
    369,
    370,
    371,
    372,
    373,
    374,
    375,
    376,
    377,
    378,
    379,
    380,
    381,
    382,
    383,
    384,
    385,
    386,
    387,
    388,
    389,
    390,
    391,
    392,
    393,
    394,
    395,
    396,
    397,
    398,
    399,
    400,
    401,
    402,
    403,
    404,
    405,
    406,
    407,
    408,
    409,
    410,
    411,
    412,
    413,
    414,
    415,
    416,
    417,
    418,
    419,
    420,
    421,
    422,
    423,
    424,
    425,
    426,
    427,
    428,
    429,
    430,
    431,
    432,
    433,
    434,
    435,
    436,
    437,
    438,
    439,
    440,
    441,
    442,
    443,
    444,
    445,
    446,
    447,
    448,
    449,
    450,
    451,
    452,
    453,
    454,
    455,
    456,
    457,
    458,
    459,
    460,
    461,
    462,
    463,
    464,
    465,
    466,
    467,
    468,
    469,
    470,
    471,
    472,
    473,
    137,
    475,
    476,
    477,
    478,
    479,
    480,
    481,
    482,
    483,
    484,
    485,
    486,
    487,
    488,
    489,
    490,
    491,
    492,
    493,
    494,
    495,
    496,
    497,
    498,
    499,
    500,
    501,
    502,
    503,
    504,
    505,
    506,
    507,
    508,
    509,
    510,
    511,
    512,
    513,
    514,
    515,
    516,
    517,
    518,
    519,
    520,
    521,
    522,
    523,
    524,
    525,
    526,
    527,
    528,
    529,
    530,
    531,
    532,
    533,
    534,
    535,
    536,
    537,
    538,
    539,
    540,
    541,
    542,
    543,
    544,
    545,
    546,
    547,
    548,
    549,
    550,
    551,
    552,
    553,
    554,
    555,
    556,
    557,
    558,
    559,
    560,
    561,
    562,
    563,
    564,
    565,
    566,
    567,
    568,
    569,
    570,
    571,
    572,
    573,
    574,
    575,
    576,
    577,
    578,
    579,
    580,
    581,
    582,
    583,
    584,
    585,
    586,
    587,
    588,
    589,
    590,
    591,
    592,
    593,
    594,
    595,
    596,
    597,
    598,
    599,
    600,
    601,
    602,
    603,
    604,
    605,
    606,
    607,
    608,
    609,
    610,
    611,
    612,
    613,
    614,
    615,
    616,
    617,
    618,
    619,
    620,
    621,
    622,
    623,
    624,
    625,
    626,
    627,
    628,
    629,
    630,
    631,
    632,
    633,
    634,
    635,
    636,
    637,
    638,
    639,
    640,
    641,
    642,
    643,
    644,
    645,
    646,
    647,
    648,
    649,
    650,
    651,
    652,
    653,
    654,
    655,
    656,
    657,
    658,
    659,
    660,
    661,
    662,
    663,
    664,
    665,
    666,
    667,
    668,
    669,
    670,
    671,
    672,
    673,
    674,
    675,
    676,
    677,
    678,
    679,
    680,
    681,
    682,
    683,
    684,
    685,
    686,
    687,
    688,
    689,
    690,
    691,
    692,
    693,
    694,
    695,
    696,
    697,
    698,
    699,
    700,
    701,
    702,
    703,
    704,
    705,
    706,
    707,
    708,
    709,
    710,
    711,
    712,
    713,
    714,
    715,
    716,
    717,
    718,
    719,
    720,
    721,
    722,
    723,
    724,
    725,
    726,
    727,
    728,
    729,
    730,
    731,
    732,
    733,
    734,
    735,
    736,
    737,
    738,
    739,
    740,
    741,
    742,
    743,
    744,
    745,
    746,
    747,
    748,
    749,
    750,
    751,
    752,
    753,
    754,
    755,
    756,
    757,
    758,
    759,
    760,
    761,
    762,
    763,
    764,
    765,
    766,
    767,
    768,
    769,
    770,
    771,
    772,
    773,
    774,
    775,
    776,
    777,
    778,
    779,
    780,
    781,
    782,
    783,
    784,
    785,
    786,
    787,
    788,
    789,
    790,
    791,
    792,
    793,
    794,
    795,
    796,
    797,
    798,
    799,
    800,
    801,
    802,
    803,
    804,
    805,
    806,
    807,
    808,
    809,
    810,
    811,
    812,
    813,
    814,
    815,
    816,
    817,
    818,
    819,
    820,
    821,
    822,
    823,
    824,
    825,
    826,
    827,
    828,
    829,
    830,
    831,
    832,
    833,
    834,
    835,
    836,
    837,
    838,
    839,
    840,
    841,
    842,
    843,
    844,
    845,
    846,
    847,
    848,
    849,
    850,
    851,
    852,
    853,
    854,
    855,
    856,
    857,
    858,
    859,
    860,
    861,
    862,
    863,
    864,
    865,
    866,
    867,
    868,
    869,
    870,
    871,
    872,
    873,
    874,
    875,
    876,
    877,
    878,
    879,
    880,
    881,
    882,
    883,
    884,
    885,
    886,
    887,
    888,
    889,
    890,
    891,
    892,
    893,
    894,
    895,
    896,
    897,
    898,
    899,
    900,
    901,
    902,
    903,
    904,
    905,
    3,
    6,
    6,
    9,
    15,
    18,
    65,
    80,
    94,
    115,
    127,
    130,
    142,
    150,
    150,
    181,
    208,
    212,
    214,
    229,
    248,
    254,
    257,
    260,
    282,
    302,
    303,
    306,
    308,
    310,
    319,
    323,
    334,
    354,
    359,
    362,
    373,
    376,
    380,
    381,
    428,
    445,
    448,
    460,
    475,
    531,
    719,
    384,
    382,
    383,
    19,
    20,
    26,
    27,
    28,
    37,
    38,
    50,
    51,
    52,
    53,
    74,
    75,
    76,
    88,
    89,
    103,
    105,
    52,
    77,
    78,
    79,
    80,
    83,
    110,
    122,
    144,
    145,
    146,
    199,
    222,
    263,
    264,
    554,
    555,
    562,
    618,
    58,
    59,
    100,
    101,
    157,
    211,
    215,
    503,
    549,
    570,
    571,
    628,
    705,
    706,
    713,
    724,
    25,
    25,
    25,
    25,
    25,
    25,
    25,
    25,
    25,
    25,
    25,
    25,
    25,
    25,
    172,
    201,
    201,
    201,
    201,
    201,
    201,
    201,
    201,
    201,
    201,
    201,
    201,
    201,
    201,
    201,
    201,
    201,
    201,
    201,
    201,
    201,
    201,
    201,
    201,
    201,
    201,
    201,
    351,
    351,
    351,
    386,
    386,
    386,
    412,
    412,
    413,
    413,
    421,
    422,
    423,
    479,
    479,
    479,
    479,
    479,
    483,
    484,
    487,
    492,
    493,
    493,
    493,
    493,
    493,
    493,
    493,
    493,
    493,
    493,
    493,
    493,
    493,
    493,
    493,
    493,
    493,
    550,
    550,
    555,
    555,
    585,
    585,
    585,
    586,
    586,
    586,
    641,
    642,
    645,
    905,
    646,
    646,
    647,
    648,
    649,
    649,
    649,
    649,
    658,
    658,
    666,
    666,
    666,
    666,
    666,
    666,
    666,
    666,
    666,
    666,
    666,
    666,
    666,
    666,
    666,
    666,
    666,
    666,
    666,
    669,
    669,
    669,
    669,
    670,
    670,
    670,
    670,
    670,
    671,
    671,
    671,
    671,
    676,
    676,
    676,
    676,
    676,
    676,
    676,
    676,
    676,
    678,
    681,
    710,
    710,
    710,
    711,
    711,
    711,
    716,
    718,
    718,
    718,
    718,
    720,
    741,
    741,
    741,
    744,
    745,
    745,
    746,
    773,
    773,
    773,
    773,
    773,
    773,
    773,
    773,
    773,
    773,
    773,
    773,
    773,
    773,
    773,
    773,
    773,
    774,
    774,
    774,
    774,
    774,
    774,
    774,
    774,
    774,
    774,
    774,
    774,
    774,
    778,
    800,
    800,
    800,
    801,
    845,
    845,
    849,
    854,
    855,
    869,
    869,
    869,
    869,
    869,
    869,
    869,
    869,
    875,
    876,
    877,
    888,
    889,
    890,
    892,
    893,
    898,
    898,
    902,
    869,
    869,
    869,
    869,
    869,
    869,
    869,
    869,
    869,
    869,
    869,
    869,
    869,
    869,
    869,
    869,
    869,
    869,
    869,
    869,
    869,
    869,
    869,
    869,
    869,
    869,
    869,
    869,
    869,
    869,
    869,
    869,
    869,
    869,
    869,
    869,
    869,
    869,
    869,
    869,
    869,
    869,
    869,
    869,
    869,
    869,
    869,
    869,
    869,
    869,
    869,
    869,
    869,
    869,
    906,
    907,
    908,
    909,
    910,
    911,
    912,
    913,
    914,
    915,
    916,
    916,
    917,
    918,
    919,
    920,
    921,
    922,
    923,
    924,
    925,
    925,
    926,
    927,
    928,
    929,
    930,
    931,
    931,
    931,
    931,
    932,
    933,
    934,
    935,
    936,
    937,
    938,
    939,
    940,
    941,
    942,
    943,
    944,
    945,
    946,
    947,
    948,
    949,
    950,
    951,
    952,
    953,
    954,
    955,
    956,
    957,
    958,
    959,
    960,
    961,
    962,
    963,
    964,
    964,
    965,
    966,
    967,
    968,
    969,
    970,
    971,
    972,
    973,
    974,
    975,
    976,
    977,
    978,
    978,
    978,
    979,
    980,
    981,
    982,
    982,
    983,
    984,
    985,
    986,
    987,
    988,
    989,
    990,
    991,
    992,
    993,
    994,
    995,
    996,
    997,
    998,
    999,
    999,
    1000,
    1001,
    1002,
    1003,
    1004,
    1005,
    1006,
    1007,
    1008,
    128,
    128,
    128,
    194,
    1009,
    1010,
    1011,
    1012,
    1012,
    1013,
    1013,
    1014,
    1015,
    1016,
    1017,
    1017,
    1017,
    1017,
    1017,
    1017,
    1017,
    1017,
    901,
    1018,
    1019,
    1020,
    1021,
    1022,
    1023,
    1024,
    1024,
    1024,
    1025
}

--End configOverlayPokemon

abilities = {
    "Stench",
    "Drizzle",
    "Speed Boost",
    "Battle Armor",
    "Sturdy",
    "Damp",
    "Limber",
    "Sand Veil",
    "Static",
    "Volt Absorb",
    "Water Absorb",
    "Oblivious",
    "Cloud Nine",
    "Compound Eyes",
    "Insomnia",
    "Color Change",
    "Immunity",
    "Flash Fire",
    "Shield Dust",
    "Own Tempo",
    "Suction Cups",
    "Intimidate",
    "Shadow Tag",
    "Rough Skin",
    "Wonder Guard",
    "Levitate",
    "Effect Spore",
    "Synchronize",
    "Clear Body",
    "Natural Cure",
    "Lightning Rod",
    "Serene Grace",
    "Swift Swim",
    "Chlorophyll",
    "Illuminate",
    "Trace",
    "Huge Power",
    "Poison Point",
    "Inner Focus",
    "Magma Armor",
    "Water Veil",
    "Magnet Pull",
    "Soundproof",
    "Rain Dish",
    "Sand Stream",
    "Pressure",
    "Thick Fat",
    "Early Bird",
    "Flame Body",
    "Run Away",
    "Keen Eye",
    "Hyper Cutter",
    "Pickup",
    "Truant",
    "Hustle",
    "Cute Charm",
    "Plus",
    "Minus",
    "Forecast",
    "Sticky Hold",
    "Shed Skin",
    "Guts",
    "Marvel Scale",
    "Liquid Ooze",
    "Overgrow",
    "Blaze",
    "Torrent",
    "Swarm",
    "Rock Head",
    "Drought",
    "Arena Trap",
    "Vital Spirit",
    "White Smoke",
    "Pure Power",
    "Shell Armor",
    "Air Lock",
    "Tangled Feet",
    "Motor Drive",
    "Rivalry",
    "Steadfast",
    "Snow Cloak",
    "Gluttony",
    "Anger Point",
    "Unburden",
    "Heatproof",
    "Simple",
    "Dry Skin",
    "Download",
    "Iron Fist",
    "Poison Heal",
    "Adaptability",
    "Skill Link",
    "Hydration",
    "Solar Power",
    "Quick Feet",
    "Normalize",
    "Sniper",
    "Magic Guard",
    "No Guard",
    "Stall",
    "Technician",
    "Leaf Guard",
    "Klutz",
    "Mold Breaker",
    "Super Luck",
    "Aftermath",
    "Anticipation",
    "Forewarn",
    "Unaware",
    "Tinted Lens",
    "Filter",
    "Slow Start",
    "Scrappy",
    "Storm Drain",
    "Ice Body",
    "Solid Rock",
    "Snow Warning",
    "Honey Gather",
    "Frisk",
    "Reckless",
    "Multitype",
    "Flower Gift",
    "Bad Dreams",
    "Pickpocket",
    "Sheer Force",
    "Contrary",
    "Unnerve",
    "Defiant",
    "Defeatist",
    "Cursed Body",
    "Healer",
    "Friend Guard",
    "Weak Armor",
    "Heavy Metal",
    "Light Metal",
    "Multiscale",
    "Toxic Boost",
    "Flare Boost",
    "Harvest",
    "Telepathy",
    "Moody",
    "Overcoat",
    "Poison Touch",
    "Regenerator",
    "Big Pecks",
    "Sand Rush",
    "Wonder Skin",
    "Analytic",
    "Illusion",
    "Imposter",
    "Infiltrator",
    "Mummy",
    "Moxie",
    "Justified",
    "Rattled",
    "Magic Bounce",
    "Sap Sipper",
    "Prankster",
    "Sand Force",
    "Iron Barbs",
    "Zen Mode",
    "Victory Star",
    "Turboblaze",
    "Teravolt",
    "Aroma Veil",
    "Flower Veil",
    "Cheek Pouch",
    "Protean",
    "Fur Coat",
    "Magician",
    "Bulletproof",
    "Competitive",
    "Strong Jaw",
    "Refrigerate",
    "Sweet Veil",
    "Stance Change",
    "Gale Wings",
    "Mega Launcher",
    "Grass Pelt",
    "Symbiosis",
    "Tough Claws",
    "Pixilate",
    "Gooey",
    "Aerilate",
    "Parental Bond",
    "Dark Aura",
    "Fairy Aura",
    "Aura Break",
    "Primordial Sea",
    "Desolate Land",
    "Delta Stream",
    "Stamina",
    "Wimp Out",
    "Emergency Exit",
    "Water Compaction",
    "Merciless",
    "Shields Down",
    "Stakeout",
    "Water Bubble",
    "Steelworker",
    "Berserk",
    "Slush Rush",
    "Long Reach",
    "Liquid Voice",
    "Triage",
    "Galvanize",
    "Surge Surfer",
    "Schooling",
    "Disguise",
    "Battle Bond",
    "Power Construct",
    "Corrosion",
    "Comatose",
    "Queenly Majesty",
    "Innards Out",
    "Dancer",
    "Battery",
    "Fluffy",
    "Dazzling",
    "Soul Heart",
    "Tangling Hair",
    "Receiver",
    "Power Of Alchemy",
    "Beast Boost",
    "Rks System",
    "Electric Surge",
    "Psychic Surge",
    "Misty Surge",
    "Grassy Surge",
    "Full Metal Body",
    "Shadow Shield",
    "Prism Armor",
    "Neuroforce",
    "Intrepid Sword",
    "Dauntless Shield",
    "Libero",
    "Ball Fetch",
    "Cotton Down",
    "Propeller Tail",
    "Mirror Armor",
    "Gulp Missile",
    "Stalwart",
    "Steam Engine",
    "Punk Rock",
    "Sand Spit",
    "Ice Scales",
    "Ripen",
    "Ice Face",
    "Power Spot",
    "Mimicry",
    "Screen Cleaner",
    "Steely Spirit",
    "Perish Body",
    "Wandering Spirit",
    "Gorilla Tactics",
    "Neutralizing Gas",
    "Pastel Veil",
    "Hunger Switch",
    "Quick Draw",
    "Unseen Fist",
    "Curious Medicine",
    "Transistor",
    "Dragons Maw",
    "Chilling Neigh",
    "Grim Neigh",
    "As One (Glastrier)",
    "As One (Spectrier)",
    "Lingering Aroma",
    "Seed Sower",
    "Thermal Exchange",
    "Anger Shell",
    "Purifying Salt",
    "Well Baked Body",
    "Wind Rider",
    "Guard Dog",
    "Rocky Payload",
    "Wind Power",
    "Zero To Hero",
    "Commander",
    "Electromorphosis",
    "Protosynthesis",
    "Quark Drive",
    "Good As Gold",
    "Vessel Of Ruin",
    "Sword Of Ruin",
    "Tablets Of Ruin",
    "Beads Of Ruin",
    "Orichalcum Pulse",
    "Hadron Engine",
    "Opportunist",
    "Cud Chew",
    "Sharpness",
    "Supreme Overlord",
    "Costar",
    "Toxic Debris",
    "Armor Tail",
    "Earth Eater",
    "Mycelium Might",
    "Hospitality",
    "Mind's Eye",
    "Embody Aspect (Teal)",
    "Embody Aspect (Hearthflame)",
    "Embody Aspect (Wellspring)",
    "Embody Aspect (Cornerstone)",
    "Toxic Chain",
    "Supersweet Syrup",
    "Tera Shift",
    "Tera Shell",
    "Teraform Zero",
    "Poison Puppeteer",
}

item = {
    "None",
    "Poke Ball",
    "Great Ball",
    "Ultra Ball",
    "Master Ball",
    "Premier Ball",
    "Heal Ball",
    "Net Ball",
    "Nest Ball",
    "Dive Ball",
    "Dusk Ball",
    "Timer Ball",
    "Quick Ball",
    "Repeat Ball",
    "Luxury Ball",
    "Level Ball",
    "Lure Ball",
    "Moon Ball",
    "Friend Ball",
    "Love Ball",
    "Fast Ball",
    "Heavy Ball",
    "Dream Ball",
    "Safari Ball",
    "Sport Ball",
    "Park Ball",
    "Beast Ball",
    "Cherish Ball",
    "Potion",
    "Super Potion",
    "Hyper Potion",
    "Max Potion",
    "Full Restore",
    "Revive",
    "Max Revive",
    "Fresh Water",
    "Soda Pop",
    "Lemonade",
    "Moomoo Milk",
    "Energy Powder",
    "Energy Root",
    "Heal Powder",
    "Revival Herb",
    "Antidote",
    "Paralyze Heal",
    "Burn Heal",
    "Ice Heal",
    "Awakening",
    "Full Heal",
    "Ether",
    "Max Ether",
    "Elixir",
    "Max Elixir",
    "Berry Juice",
    "Sacred Ash",
    "Sweet Heart",
    "Max Honey",
    "Pewter Crunchies",
    "Rage Candy Bar",
    "Lava Cookie",
    "Old Gateau",
    "Casteliacone",
    "Lumiose Galette",
    "Shalour Sable",
    "Big Malasada",
    "Hp Up",
    "Protein",
    "Iron",
    "Calcium",
    "Zinc",
    "Carbos",
    "Pp Up",
    "Pp Max",
    "Health Feather",
    "Muscle Feather",
    "Resist Feather",
    "Genius Feather",
    "Clever Feather",
    "Swift Feather",
    "Ability Capsule",
    "Ability Patch",
    "Lonely Mint",
    "Adamant Mint",
    "Naughty Mint",
    "Brave Mint",
    "Bold Mint",
    "Impish Mint",
    "Lax Mint",
    "Relaxed Mint",
    "Modest Mint",
    "Mild Mint",
    "Rash Mint",
    "Quiet Mint",
    "Calm Mint",
    "Gentle Mint",
    "Careful Mint",
    "Sassy Mint",
    "Timid Mint",
    "Hasty Mint",
    "Jolly Mint",
    "Naive Mint",
    "Serious Mint",
    "Rare Candy",
    "Exp Candy Xs",
    "Exp Candy S",
    "Exp Candy M",
    "Exp Candy L",
    "Exp Candy Xl",
    "Dynamax Candy",
    "Blue Flute",
    "Yellow Flute",
    "Red Flute",
    "Black Flute",
    "White Flute",
    "Repel",
    "Super Repel",
    "Max Repel",
    "Lure",
    "Super Lure",
    "Max Lure",
    "Escape Rope",
    "X Attack",
    "X Defense",
    "X Sp Atk",
    "X Sp Def",
    "X Speed",
    "X Accuracy",
    "Dire Hit",
    "Guard Spec",
    "Poke Doll",
    "Fluffy Tail",
    "Poke Toy",
    "Max Mushrooms",
    "Bottle Cap",
    "Gold Bottle Cap",
    "Nugget",
    "Big Nugget",
    "Tiny Mushroom",
    "Big Mushroom",
    "Balm Mushroom",
    "Pearl",
    "Big Pearl",
    "Pearl String",
    "Stardust",
    "Star Piece",
    "Comet Shard",
    "Shoal Salt",
    "Shoal Shell",
    "Red Shard",
    "Blue Shard",
    "Yellow Shard",
    "Green Shard",
    "Heart Scale",
    "Honey",
    "Rare Bone",
    "Odd Keystone",
    "Pretty Feather",
    "Relic Copper",
    "Relic Silver",
    "Relic Gold",
    "Relic Vase",
    "Relic Band",
    "Relic Statue",
    "Relic Crown",
    "Strange Souvenir",
    "Helix Fossil",
    "Dome Fossil",
    "Old Amber",
    "Root Fossil",
    "Claw Fossil",
    "Armor Fossil",
    "Skull Fossil",
    "Cover Fossil",
    "Plume Fossil",
    "Jaw Fossil",
    "Sail Fossil",
    "Fossilized Bird",
    "Fossilized Fish",
    "Fossilized Drake",
    "Fossilized Dino",
    "Growth Mulch",
    "Damp Mulch",
    "Stable Mulch",
    "Gooey Mulch",
    "Rich Mulch",
    "Surprise Mulch",
    "Boost Mulch",
    "Amaze Mulch",
    "Red Apricorn",
    "Blue Apricorn",
    "Yellow Apricorn",
    "Green Apricorn",
    "Pink Apricorn",
    "White Apricorn",
    "Black Apricorn",
    "Wishing Piece",
    "Galarica Twig",
    "Armorite Ore",
    "Dynite Ore",
    "Orange Mail",
    "Harbor Mail",
    "Glitter Mail",
    "Mech Mail",
    "Wood Mail",
    "Wave Mail",
    "Bead Mail",
    "Shadow Mail",
    "Tropic Mail",
    "Dream Mail",
    "Fab Mail",
    "Retro Mail",
    "Fire Stone",
    "Water Stone",
    "Thunder Stone",
    "Leaf Stone",
    "Ice Stone",
    "Sun Stone",
    "Moon Stone",
    "Shiny Stone",
    "Dusk Stone",
    "Dawn Stone",
    "Sweet Apple",
    "Tart Apple",
    "Cracked Pot",
    "Chipped Pot",
    "Galarica Cuff",
    "Galarica Wreath",
    "Dragon Scale",
    "Upgrade",
    "Protector",
    "Electirizer",
    "Magmarizer",
    "Dubious Disc",
    "Reaper Cloth",
    "Prism Scale",
    "Whipped Dream",
    "Sachet",
    "Oval Stone",
    "Strawberry Sweet",
    "Love Sweet",
    "Berry Sweet",
    "Clover Sweet",
    "Flower Sweet",
    "Star Sweet",
    "Ribbon Sweet",
    "Everstone",
    "Red Nectar",
    "Yellow Nectar",
    "Pink Nectar",
    "Purple Nectar",
    "Flame Plate",
    "Splash Plate",
    "Zap Plate",
    "Meadow Plate",
    "Icicle Plate",
    "Fist Plate",
    "Toxic Plate",
    "Earth Plate",
    "Sky Plate",
    "Mind Plate",
    "Insect Plate",
    "Stone Plate",
    "Spooky Plate",
    "Draco Plate",
    "Dread Plate",
    "Iron Plate",
    "Pixie Plate",
    "Douse Drive",
    "Shock Drive",
    "Burn Drive",
    "Chill Drive",
    "Fire Memory",
    "Water Memory",
    "Electric Memory",
    "Grass Memory",
    "Ice Memory",
    "Fighting Memory",
    "Poison Memory",
    "Ground Memory",
    "Flying Memory",
    "Psychic Memory",
    "Bug Memory",
    "Rock Memory",
    "Ghost Memory",
    "Dragon Memory",
    "Dark Memory",
    "Steel Memory",
    "Fairy Memory",
    "Rusted Sword",
    "Rusted Shield",
    "Red Orb",
    "Blue Orb",
    "Venusaurite",
    "Charizardite X",
    "Charizardite Y",
    "Blastoisinite",
    "Beedrillite",
    "Pidgeotite",
    "Alakazite",
    "Slowbronite",
    "Gengarite",
    "Kangaskhanite",
    "Pinsirite",
    "Gyaradosite",
    "Aerodactylite",
    "Mewtwonite X",
    "Mewtwonite Y",
    "Ampharosite",
    "Steelixite",
    "Scizorite",
    "Heracronite",
    "Houndoominite",
    "Tyranitarite",
    "Sceptilite",
    "Blazikenite",
    "Swampertite",
    "Gardevoirite",
    "Sablenite",
    "Mawilite",
    "Aggronite",
    "Medichamite",
    "Manectite",
    "Sharpedonite",
    "Cameruptite",
    "Altarianite",
    "Banettite",
    "Absolite",
    "Glalitite",
    "Salamencite",
    "Metagrossite",
    "Latiasite",
    "Latiosite",
    "Lopunnite",
    "Garchompite",
    "Lucarionite",
    "Abomasite",
    "Galladite",
    "Audinite",
    "Diancite",
    "Normal Gem",
    "Fire Gem",
    "Water Gem",
    "Electric Gem",
    "Grass Gem",
    "Ice Gem",
    "Fighting Gem",
    "Poison Gem",
    "Ground Gem",
    "Flying Gem",
    "Psychic Gem",
    "Bug Gem",
    "Rock Gem",
    "Ghost Gem",
    "Dragon Gem",
    "Dark Gem",
    "Steel Gem",
    "Fairy Gem",
    "Normalium Z",
    "Firium Z",
    "Waterium Z",
    "Electrium Z",
    "Grassium Z",
    "Icium Z",
    "Fightinium Z",
    "Poisonium Z",
    "Groundium Z",
    "Flyinium Z",
    "Psychium Z",
    "Buginium Z",
    "Rockium Z",
    "Ghostium Z",
    "Dragonium Z",
    "Darkinium Z",
    "Steelium Z",
    "Fairium Z",
    "Pikanium Z",
    "Eevium Z",
    "Snorlium Z",
    "Mewnium Z",
    "Decidium Z",
    "Incinium Z",
    "Primarium Z",
    "Lycanium Z",
    "Mimikium Z",
    "Kommonium Z",
    "Tapunium Z",
    "Solganium Z",
    "Lunalium Z",
    "Marshadium Z",
    "Aloraichium Z",
    "Pikashunium Z",
    "Ultranecrozium Z",
    "Light Ball",
    "Leek",
    "Thick Club",
    "Lucky Punch",
    "Metal Powder",
    "Quick Powder",
    "Deep Sea Scale",
    "Deep Sea Tooth",
    "Soul Dew",
    "Adamant Orb",
    "Lustrous Orb",
    "Griseous Orb",
    "Sea Incense",
    "Lax Incense",
    "Odd Incense",
    "Rock Incense",
    "Full Incense",
    "Wave Incense",
    "Rose Incense",
    "Luck Incense",
    "Pure Incense",
    "Red Scarf",
    "Blue Scarf",
    "Pink Scarf",
    "Green Scarf",
    "Yellow Scarf",
    "Macho Brace",
    "Power Weight",
    "Power Bracer",
    "Power Belt",
    "Power Lens",
    "Power Band",
    "Power Anklet",
    "Silk Scarf",
    "Charcoal",
    "Mystic Water",
    "Magnet",
    "Miracle Seed",
    "Never Melt Ice",
    "Black Belt",
    "Poison Barb",
    "Soft Sand",
    "Sharp Beak",
    "Twisted Spoon",
    "Silver Powder",
    "Hard Stone",
    "Spell Tag",
    "Dragon Fang",
    "Black Glasses",
    "Metal Coat",
    "Choice Band",
    "Choice Specs",
    "Choice Scarf",
    "Flame Orb",
    "Toxic Orb",
    "Damp Rock",
    "Heat Rock",
    "Smooth Rock",
    "Icy Rock",
    "Electric Seed",
    "Psychic Seed",
    "Misty Seed",
    "Grassy Seed",
    "Absorb Bulb",
    "Cell Battery",
    "Luminous Moss",
    "Snowball",
    "Bright Powder",
    "White Herb",
    "Exp Share",
    "Quick Claw",
    "Soothe Bell",
    "Mental Herb",
    "Kings Rock",
    "Amulet Coin",
    "Cleanse Tag",
    "Smoke Ball",
    "Focus Band",
    "Lucky Egg",
    "Scope Lens",
    "Leftovers",
    "Shell Bell",
    "Wide Lens",
    "Muscle Band",
    "Wise Glasses",
    "Expert Belt",
    "Light Clay",
    "Life Orb",
    "Power Herb",
    "Focus Sash",
    "Zoom Lens",
    "Metronome",
    "Iron Ball",
    "Lagging Tail",
    "Destiny Knot",
    "Black Sludge",
    "Grip Claw",
    "Sticky Barb",
    "Shed Shell",
    "Big Root",
    "Razor Claw",
    "Razor Fang",
    "Eviolite",
    "Float Stone",
    "Rocky Helmet",
    "Air Balloon",
    "Red Card",
    "Ring Target",
    "Binding Band",
    "Eject Button",
    "Weakness Policy",
    "Assault Vest",
    "Safety Goggles",
    "Adrenaline Orb",
    "Terrain Extender",
    "Protective Pads",
    "Throat Spray",
    "Eject Pack",
    "Heavy Duty Boots",
    "Blunder Policy",
    "Room Service",
    "Utility Umbrella",
    "Cheri Berry",
    "Chesto Berry",
    "Pecha Berry",
    "Rawst Berry",
    "Aspear Berry",
    "Leppa Berry",
    "Oran Berry",
    "Persim Berry",
    "Lum Berry",
    "Sitrus Berry",
    "Figy Berry",
    "Wiki Berry",
    "Mago Berry",
    "Aguav Berry",
    "Iapapa Berry",
    "Razz Berry",
    "Bluk Berry",
    "Nanab Berry",
    "Wepear Berry",
    "Pinap Berry",
    "Pomeg Berry",
    "Kelpsy Berry",
    "Qualot Berry",
    "Hondew Berry",
    "Grepa Berry",
    "Tamato Berry",
    "Cornn Berry",
    "Magost Berry",
    "Rabuta Berry",
    "Nomel Berry",
    "Spelon Berry",
    "Pamtre Berry",
    "Watmel Berry",
    "Durin Berry",
    "Belue Berry",
    "Chilan Berry",
    "Occa Berry",
    "Passho Berry",
    "Wacan Berry",
    "Rindo Berry",
    "Yache Berry",
    "Chople Berry",
    "Kebia Berry",
    "Shuca Berry",
    "Coba Berry",
    "Payapa Berry",
    "Tanga Berry",
    "Charti Berry",
    "Kasib Berry",
    "Haban Berry",
    "Colbur Berry",
    "Babiri Berry",
    "Roseli Berry",
    "Liechi Berry",
    "Ganlon Berry",
    "Salac Berry",
    "Petaya Berry",
    "Apicot Berry",
    "Lansat Berry",
    "Starf Berry",
    "Enigma Berry",
    "Micle Berry",
    "Custap Berry",
    "Jaboca Berry",
    "Rowap Berry",
    "Kee Berry",
    "Maranga Berry",
    "Enigma Berry E Reader",
    "TM01",
    "TM02",
    "TM03",
    "TM04",
    "TM05",
    "TM06",
    "TM07",
    "TM08",
    "TM09",
    "TM10",
    "TM11",
    "TM12",
    "TM13",
    "TM14",
    "TM15",
    "TM16",
    "TM17",
    "TM18",
    "TM19",
    "TM20",
    "TM21",
    "TM22",
    "TM23",
    "TM24",
    "TM25",
    "TM26",
    "TM27",
    "TM28",
    "TM29",
    "TM30",
    "TM31",
    "TM32",
    "TM33",
    "TM34",
    "TM35",
    "TM36",
    "TM37",
    "TM38",
    "TM39",
    "TM40",
    "TM41",
    "TM42",
    "TM43",
    "TM44",
    "TM45",
    "TM46",
    "TM47",
    "TM48",
    "TM49",
    "TM50",
    "TM51",
    "TM52",
    "TM53",
    "TM54",
    "TM55",
    "TM56",
    "TM57",
    "TM58",
    "TM59",
    "TM60",
    "TM61",
    "TM62",
    "TM63",
    "TM64",
    "TM65",
    "TM66",
    "TM67",
    "TM68",
    "TM69",
    "TM70",
    "TM71",
    "TM72",
    "TM73",
    "TM74",
    "TM75",
    "TM76",
    "TM77",
    "TM78",
    "TM79",
    "TM80",
    "TM81",
    "TM82",
    "TM83",
    "TM84",
    "TM85",
    "TM86",
    "TM87",
    "TM88",
    "TM89",
    "TM90",
    "TM91",
    "TM92",
    "TM93",
    "TM94",
    "TM95",
    "TM96",
    "TM97",
    "TM98",
    "TM99",
    "TM100",
    "HM01",
    "HM02",
    "HM03",
    "HM04",
    "HM05",
    "HM06",
    "HM07",
    "HM08",
    "Oval Charm",
    "Shiny Charm",
    "Catching Charm",
    "Exp Charm",
    "Rotom Catalog",
    "Gracidea",
    "Reveal Glass",
    "Dna Splicers",
    "Zygarde Cube",
    "Prison Bottle",
    "N Solarizer",
    "N Lunarizer",
    "Reins Of Unity",
    "Mega Ring",
    "Z Power Ring",
    "Dynamax Band",
    "Bicycle",
    "Mach Bike",
    "Acro Bike",
    "Old Rod",
    "Good Rod",
    "Super Rod",
    "Dowsing Machine",
    "Town Map",
    "Vs Seeker",
    "Tm Case",
    "Berry Pouch",
    "Pokemon Box Link",
    "Coin Case",
    "Powder Jar",
    "Wailmer Pail",
    "Poke Radar",
    "Pokeblock Case",
    "Soot Sack",
    "Poke Flute",
    "Fame Checker",
    "Teachy Tv",
    "Ss Ticket",
    "Eon Ticket",
    "Mystic Ticket",
    "Aurora Ticket",
    "Old Sea Map",
    "Letter",
    "Devon Parts",
    "Go Goggles",
    "Devon Scope",
    "Basement Key",
    "Scanner",
    "Storage Key",
    "Key To Room 1",
    "Key To Room 2",
    "Key To Room 4",
    "Key To Room 6",
    "Meteorite",
    "Magma Emblem",
    "Contest Pass",
    "Parcel",
    "Secret Key",
    "Bike Voucher",
    "Gold Teeth",
    "Card Key",
    "Lift Key",
    "Silph Scope",
    "Tri Pass",
    "Rainbow Pass",
    "Tea",
    "Ruby",
    "Sapphire",
    "Ability Shield",
    "Clear Amulet",
    "Punching Glove",
    "Covert Cloak",
    "Loaded Dice",
    "Auspicious Armor",
    "Booster Energy",
    "Big Bamboo Shoot",
    "Gimmighoul Coin",
    "Leaders Crest",
    "Malicious Armor",
    "Mirror Herb",
    "Scroll Of Darkness",
    "Scroll Of Waters",
    "Tera Orb",
    "Tiny Bamboo Shoot",
    "Bug Tera Shard",
    "Dark Tera Shard",
    "Dragon Tera Shard",
    "Electric Tera Shard",
    "Fairy Tera Shard",
    "Fighting Tera Shard",
    "Fire Tera Shard",
    "Flying Tera Shard",
    "Ghost Tera Shard",
    "Grass Tera Shard",
    "Ground Tera Shard",
    "Ice Tera Shard",
    "Normal Tera Shard",
    "Poison Tera Shard",
    "Psychic Tera Shard",
    "Rock Tera Shard",
    "Steel Tera Shard",
    "Water Tera Shard",
    "Adamant Crystal",
    "Griseous Core",
    "Lustrous Globe",
    "Black Augurite",
    "Linking Cord",
    "Peat Block",
    "Berserk Gene",
    "Fairy Feather",
    "Syrupy Apple",
    "Unremarkable Teacup",
    "Masterpiece Teacup",
    "Cornerstone Mask",
    "Wellspring Mask",
    "Hearthflame Mask",
    "Health Mochi",
    "Muscle Mochi",
    "Resist Mochi",
    "Genius Mochi",
    "Clever Mochi",
    "Swift Mochi",
    "Fresh Start Mochi",
    "Glimmering Charm",
    "Metal Alloy",
    "Stellar Tera Shard",
    "Jubilife Muffin",
    "Remedy",
    "Fine Remedy",
    "Superb Remedy",
    "Aux Evasion",
    "Aux Guard",
    "Aux Power",
    "Aux Powerguard",
    "Choice Dumpling",
    "Swap Snack",
    "Twice Spiced Radish",
    "Pokeshi Doll",
    "Strange Ball",
}

--Start configOverlayPokemon

pokeballType = {
    "poke-ball",
    "great-ball",
    "ultra-ball",
    "master-ball",
    "premier-ball",
    "heal-ball",
    "net-ball",
    "nest-ball",
    "dive-ball",
    "dusk-ball",
    "timer-ball",
    "quick-ball",
    "repeat-ball",
    "luxury-ball",
    "level-ball",
    "lure-ball",
    "moon-ball",
    "friend-ball",
    "love-ball",
    "fast-ball",
    "heavy-ball",
    "dream-ball",
    "safari-ball",
    "sport-ball",
    "park-ball",
    "beast-ball",
    "cherish-ball",
}

--End configOverlayPokemon

nature = {"Hardy","Lonely","Brave","Adamant","Naughty",
			"Bold","Docile","Relaxed","Impish","Lax",
			"Timid","Hasty","Serious","Jolly","Naive",
			"Modest","Mild","Quiet","Bashful","Rash",
			"Calm","Gentle","Sassy","Careful","Quirky"}

charmap = { [0]=
	" ", "À", "Á", "Â", "Ç", "È", "É", "Ê", "Ë", "Ì", "こ", "Î", "Ï", "Ò", "Ó", "Ô",
	"Œ", "Ù", "Ú", "Û", "Ñ", "ß", "à", "á", "ね", "ç", "è", "é", "ê", "ë", "ì", "ま",
	"î", "ï", "ò", "ó", "ô", "œ", "ù", "ú", "û", "ñ", "º", "ª", " ", "&", "+", "あ",
	"ぃ", "ぅ", "ぇ", "ぉ", "v", "=", "ょ", "が", "ぎ", "ぐ", "げ", "ご", "ざ", "じ", "ず", "ぜ",
	"ぞ", "だ", "ぢ", "づ", "で", "ど", "ば", "び", "ぶ", "べ", "ぼ", "ぱ", "ぴ", "ぷ", "ぺ", "ぽ",
	"っ", "¿", "¡", "P\u{200d}k", "M\u{200d}n", "P\u{200d}o", "K\u{200d}é", " ", " ", " ", "Í", "%", "(", ")", "セ", "ソ",
	"タ", "チ", "ツ", "テ", "ト", "ナ", "ニ", "ヌ", "â", "ノ", "ハ", "ヒ", "フ", "ヘ", "ホ", "í",
	"ミ", "ム", "メ", "モ", "ヤ", "ユ", "ヨ", "ラ", "リ", "⬆", "⬇", "⬅", "➡", "ヲ", "ン", "ァ",
	"ィ", "ゥ", "ェ", "ォ", "ャ", "ュ", "ョ", "ガ", "ギ", "グ", "ゲ", "ゴ", "ザ", "ジ", "ズ", "ゼ",
	"ゾ", "ダ", "ヂ", "ヅ", "デ", "ド", "バ", "ビ", "ブ", "ベ", "ボ", "パ", "ピ", "プ", "ペ", "ポ",
	"ッ", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "!", "?", ".", "-", "・",
	"…", "“", "”", "‘", "’", "♂", "♀", "$", ",", "×", "/", "A", "B", "C", "D", "E",
	"F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U",
	"V", "W", "X", "Y", "Z", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k",
	"l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "▶",
	":", "Ä", "Ö", "Ü", "ä", "ö", "ü", "⬆", "⬇", "⬅", " ", " ", " ", " ", " ", ""
}

levelCap = 0 -- Sets the level for all mons based on first party slot

local terminator=0xFF
local monNameLength=10
local playerNameLength=10
local boxMonSize=80
local partyMonSize=100
local speciesStructSize=260

local partyCount=0x02033609 -- gPlayerPartyCount
local partyloc=0x02033868 -- gPlayerParty
local storageLoc=0x02009578 -- gPokemonStorage
local speciesInfo=0x08680458 -- gSpeciesInfo

function getCurve(n)
	return emu:read8(speciesInfo+(speciesStructSize*n)+21)
end
function slowCurve(n)
    return math.floor((5*(n^3))/4)
end
function fastCurve(n)
    return math.floor((4*(n^3))/5)
end
function medfastCurve(n)
    return n^3
end
function medslowCurve(n)
    return math.floor((6 * (n)^3) / 5) - (15 * (n)^2) + (100 * n) - 140
end
function erraticCurve(n)
    if (n<=50) then
        return math.floor(((100 - n)*n^3)/50)
    end
    if (n<=68) then
        return math.floor(((150 - n)*n^3)/100)
    end
    if (n<=98) then
        return math.floor(math.floor((1911 - 10 * n) / 3) * n^3 / 500)
    end
    return math.floor((160 - n) * n^3 / 100)
end
function flutuatingCurve(n)
	if (n<15) then
	  return math.floor((math.floor((n + 1) / 3) + 24) * n^3 / 50)
	end
	if (n<=36) then
		return math.floor((n + 14) * n^3 / 50)
	end
	return math.floor((math.floor(n / 2) + 32) * n^3 / 50)
end

function calcLevel(exp, species)
	level = 1
	while (exp>=expRequired(species, level+1)) do
		level=level+1
	end
	return level
end

function expRequired(species, level)
	expCurve = getCurve(species)
	if (expCurve == 0) then return medfastCurve(level) end
	if (expCurve == 1) then return erraticCurve(level) end
	if (expCurve == 2) then return flutuatingCurve(level) end
	if (expCurve == 3) then return medslowCurve(level) end
	if (expCurve == 4) then return fastCurve(level) end
	if (expCurve == 5) then return slowCurve(level) end
end

function toString(rawstring)
	local string = ""
	for _, char in ipairs({rawstring:byte(1, #rawstring)}) do
		if char == terminator then
			break
		end
		string = string..charmap[char]
	end
	return string
end

function _read16BE(emu, address)
	return (emu:read8(address) << 8) | emu:read8(address + 1)
end

function setBoxMon(address, newNature, IVs, moveSlot, moveName, level, species, abilityNum, heldItem)
    local mon = readBoxMon(address)

    local key = mon.otId ~ mon.personality
    local substructSelector = {
        [0] = {0, 1, 2, 3},
        [1] = {0, 1, 3, 2},
        [2] = {0, 2, 1, 3},
        [3] = {0, 3, 1, 2},
        [4] = {0, 2, 3, 1},
        [5] = {0, 3, 2, 1},
        [6] = {1, 0, 2, 3},
        [7] = {1, 0, 3, 2},
        [8] = {2, 0, 1, 3},
        [9] = {3, 0, 1, 2},
        [10] = {2, 0, 3, 1},
        [11] = {3, 0, 2, 1},
        [12] = {1, 2, 0, 3},
        [13] = {1, 3, 0, 2},
        [14] = {2, 1, 0, 3},
        [15] = {3, 1, 0, 2},
        [16] = {2, 3, 0, 1},
        [17] = {3, 2, 0, 1},
        [18] = {1, 2, 3, 0},
        [19] = {1, 3, 2, 0},
        [20] = {2, 1, 3, 0},
        [21] = {3, 1, 2, 0},
        [22] = {2, 3, 1, 0},
        [23] = {3, 2, 1, 0}
    }
    local pSel = substructSelector[mon.personality % 24]

    local ss0 = {}
    local ss1 = {}
    local ss2 = {}
    local ss3 = {}
    for i = 0, 2 do
        ss0[i] = emu:read32(address + 32 + pSel[1] * 12 + i * 4) ~ key
        ss1[i] = emu:read32(address + 32 + pSel[2] * 12 + i * 4) ~ key
        ss2[i] = emu:read32(address + 32 + pSel[3] * 12 + i * 4) ~ key
        ss3[i] = emu:read32(address + 32 + pSel[4] * 12 + i * 4) ~ key
    end

    -- set all IVs to 31
    if (IVs ~= nil) then
        ss3[1] = (ss3[1] & 0x00000000) | (IVs[1] << 0) | (IVs[2] << 5) |
                     (IVs[3] << 10) | (IVs[6] << 15) | (IVs[4] << 20) |
                     (IVs[5] << 25)
    end

--function getNature(mon)
--	if (mon.hiddenNature == 26) then
--		return nature[(mon.personality % 25)+1]
--	end
--	return nature[mon.hiddenNature+1]
--end
    -- set hiddenNature
--GRINT
    if (newNature ~= nil) then
        local natureIx = indexOf(nature, newNature)
        if (natureIx == nil) then
            console:log('Invalid nature')
            return
        end
        local diff = math.abs((mon.hiddenNature - (natureIx - 1)))
        local sign
        if mon.hiddenNature > (natureIx - 1) then
            sign = 1
        else
            sign = -1
        end
        if (diff > 25 / 2) then
            diff = 25 - diff
            sign = -sign
        end
        local newPersonality = (mon.personality - (diff * sign)) & 0xFFFFFFFF
        emu:write32(address, newPersonality)
        mon.personality = newPersonality
        key = mon.otId ~ mon.personality
        pSel = substructSelector[mon.personality % 24]
    end

    if (moveSlot ~= nil) then
        local moveIx = 0
        if (moveName ~= nil) then
            moveIx = indexOf(move, moveName) - 1
        end
        if (moveIx == nil) then
            console:log('Invalid move')
            return
        end
        if (moveSlot < 1 or moveSlot > 4) then
            console:log('Invalid move slot number')
            return
        end
        if moveSlot == 1 then
            ss1[0] = (ss1[0] & 0xFFFF0000) | moveIx
        elseif moveSlot == 2 then
            ss1[0] = (ss1[0] & 0x0000FFFF) | (moveIx << 16)
        elseif moveSlot == 3 then
            ss1[1] = (ss1[1] & 0xFFFF0000) | moveIx
        elseif moveSlot == 4 then
            ss1[1] = (ss1[1] & 0x0000FFFF) | (moveIx << 16)
        end
    end

    if (abilityNum ~= nil) then
        ss3[2] = (abilityNum << 29) | (ss3[2] & 0x03FFFFFF)
    end

    if (level ~= nil) then
        emu:write8(address + 84, level)
        ss0[1] = expRequired(mon.species, level)
    end

    if (species ~= nil) then
        local speciesIx = indexOf(mons, species)
        ss0[0] = (ss0[0] & 0xFFFF0000) | speciesIx
        ss0[1] = expRequired(speciesIx, calcLevel(mon.experience, speciesIx))
    end

    if (heldItem ~= nil) then
        local itemIx = indexOf(item, heldItem)
        ss0[0] = (ss0[0] & 0x0000FFFF) | (itemIx << 16)
    end

    -- fix checksum
    local checksum = 0
    for i = 0, 2 do
        checksum = checksum + (ss0[i] & 0xFFFF) + (ss0[i] >> 16)
        checksum = checksum + (ss1[i] & 0xFFFF) + (ss1[i] >> 16)
        checksum = checksum + (ss2[i] & 0xFFFF) + (ss2[i] >> 16)
        checksum = checksum + (ss3[i] & 0xFFFF) + (ss3[i] >> 16)
    end
    emu:write16(address + 28, checksum)

    for i = 0, 2 do
        emu:write32(address + 32 + pSel[1] * 12 + i * 4, ss0[i] ~ key)
        emu:write32(address + 32 + pSel[2] * 12 + i * 4, ss1[i] ~ key)
        emu:write32(address + 32 + pSel[3] * 12 + i * 4, ss2[i] ~ key)
        emu:write32(address + 32 + pSel[4] * 12 + i * 4, ss3[i] ~ key)
    end
end

function readBoxMon(address)
	local mon = {}
	mon.personality = emu:read32(address + 0)
	mon.otId = emu:read32(address + 4)
	mon.nickname = toString(emu:readRange(address + 8, monNameLength))
	mon.language = emu:read8(address + 15) & 0x07
	mon.hiddenNatureModifier = (emu:read8(address + 15) >> 3) & 0x1F
	mon.hiddenNature = (mon.personality % 25)

	local flags = emu:read8(address + 16)
	mon.isBadEgg = flags & 0x01
	mon.hasSpecies = (flags >> 1) & 0x01 
	mon.isEgg = (flags >> 2) & 0x01
	mon.blockBoxRS = (flags >> 3) & 0x01
	mon.daysSinceFormChange = (flags >> 4) & 0x07 
	mon.unused_13 = (flags >> 7) & 0x01 
	mon.otName = toString(emu:readRange(address + 17, playerNameLength))
	mon.markings = emu:read8(address + 27)
	mon.compressedStatus = (emu:read8(address + 27) >> 4) & 0x0F
	mon.checksum = emu:read16(address + 28)
	mon.hpLost = emu:read16(address + 30) & 0x3FFF
	mon.shinyModifier = (emu:read16(address + 31) >> 6) & 0x01
	mon.unused_1E = (emu:read16(address + 31) >> 7) & 0x01

	local key = mon.otId ~ mon.personality
	local substructSelector = {
		[ 0] = {0, 1, 2, 3},
		[ 1] = {0, 1, 3, 2},
		[ 2] = {0, 2, 1, 3},
		[ 3] = {0, 3, 1, 2},
		[ 4] = {0, 2, 3, 1},
		[ 5] = {0, 3, 2, 1},
		[ 6] = {1, 0, 2, 3},
		[ 7] = {1, 0, 3, 2},
		[ 8] = {2, 0, 1, 3},
		[ 9] = {3, 0, 1, 2},
		[10] = {2, 0, 3, 1},
		[11] = {3, 0, 2, 1},
		[12] = {1, 2, 0, 3},
		[13] = {1, 3, 0, 2},
		[14] = {2, 1, 0, 3},
		[15] = {3, 1, 0, 2},
		[16] = {2, 3, 0, 1},
		[17] = {3, 2, 0, 1},
		[18] = {1, 2, 3, 0},
		[19] = {1, 3, 2, 0},
		[20] = {2, 1, 3, 0},
		[21] = {3, 1, 2, 0},
		[22] = {2, 3, 1, 0},
		[23] = {3, 2, 1, 0},
	}

	local pSel = substructSelector[mon.personality % 24]
	local ss0 = {}
	local ss1 = {}
	local ss2 = {}
	local ss3 = {}

	for i = 0, 2 do
		ss0[i] = emu:read32(address + 32 + pSel[1] * 12 + i * 4) ~ key
		ss1[i] = emu:read32(address + 32 + pSel[2] * 12 + i * 4) ~ key
		ss2[i] = emu:read32(address + 32 + pSel[3] * 12 + i * 4) ~ key
		ss3[i] = emu:read32(address + 32 + pSel[4] * 12 + i * 4) ~ key
	end

	flags = ss0[0]
	mon.species = flags & 0x7FF
	mon.teraType = (flags >> 11) & 0x1F
	mon.heldItem = (flags >> 16) & 0x3FF
	mon.unused_02 = (flags >> 26) & 0x3F
	flags = ss0[1]
	mon.experience = flags & 0x1FFFFF
	mon.nickname11 = (flags >> 21) & 0xFF
	mon.unused_04 = (flags >> 29) & 0x07
	flags = ss0[2]
	mon.ppBonuses = flags & 0xFF
	mon.friendship = (flags >> 8) & 0xFF
	mon.pokeball = (flags >> 16) & 0x3F
	mon.nickname12 = (flags >> 24) & 0xFF
	mon.unused_0A = (flags >> 24) & 0x03

	mon.moves = {
		ss1[0] & 0x7FF,
		(ss1[0] >> 16) & 0x7FF,
		ss1[1] & 0x7FF,
		(ss1[1] >> 16) & 0x7FF
	}

	flags = ss1[0]
	mon.move1 = flags & 0x7FF
	mon.evolutionTracker0 = (flags >> 11) & 0x1F
	mon.move2 = (flags >> 16) & 0x7FF
	mon.evolutionTracker1 = (flags >> 27) & 0x1F
	flags = ss1[1]
	mon.move3 = flags & 0x7FF
	mon.unused_04 = (flags >> 11) & 0x1F
	mon.move4 = (flags >> 16) & 0x7FF
	mon.unused_06 = (flags >> 27) & 0x07
	mon.hyperTrainedHP = (flags >> 30) & 0x01
	mon.hyperTrainedAttack = (flags >> 31) & 0x01
	flags = ss1[2]
	mon.pp1 = flags & 0x7F
	mon.hyperTrainedDefense = (flags >> 7) & 0x01
	mon.pp2 = (flags >> 8) & 0x7F
	mon.hyperTrainedSpeed = (flags >> 15) & 0x01
	mon.pp3 = (flags >> 16) & 0x7F
	mon.hyperTrainedSpAttack = (flags >> 23) & 0x01
	mon.pp4 = (flags >> 24) & 0x7F
	mon.hyperTrainedSpDefense = (flags >> 31) & 0x01

	flags = ss2[0]
	mon.hpEV = flags & 0xFF
	mon.attackEV = (flags >> 8) & 0xFF
	mon.defenseEV = (flags >> 16) & 0xFF
	mon.speedEV = flags >> 24
	flags = ss2[1]
	mon.spAttackEV = flags & 0xFF
	mon.spDefenseEV = (flags >> 8) & 0xFF
	mon.cool = (flags >> 16) & 0xFF
	mon.beauty = flags >> 24
	flags = ss2[2]
	mon.cute = flags & 0xFF
	mon.smart = (flags >> 8) & 0xFF
	mon.tough = (flags >> 16) & 0xFF
	mon.sheen = flags >> 24

	flags = ss3[0]
	mon.pokerus = flags & 0xFF
	mon.metLocation = (flags >> 8) & 0xFF
	mon.metLevel = (flags >> 16) & 0x7F
	mon.metGame = (flags >> 23) & 0x0F
	mon.dynamaxLevel = (flags >> 27) & 0x0F
	mon.otGender = (flags >> 31) & 0x01
	flags = ss3[1]
	mon.hpIV = flags & 0x1F
	mon.attackIV = (flags >> 5) & 0x1F
	mon.defenseIV = (flags >> 10) & 0x1F
	mon.speedIV = (flags >> 15) & 0x1F
	mon.spAttackIV = (flags >> 20) & 0x1F
	mon.spDefenseIV = (flags >> 25) & 0x1F
	mon.isEgg2 = (flags >> 30) & 0x01 -- Bit 30 is another "isEgg" bit
	mon.gigantamaxFactor = (flags >> 31) & 0x01
	flags = ss3[2]
	mon.coolRibbon = flags & 0x07
	mon.beautyRibbon = (flags >> 3) & 0x07
	mon.cuteRibbon = (flags >> 6) & 0x07
	mon.smartRibbon = (flags >> 9) & 0x07
	mon.toughRibbon = (flags >> 12) & 0x07
	mon.championRibbon = (flags >> 15) & 0x01
	mon.winningRibbon = (flags >> 16) & 0x01
	mon.victoryRibbon = (flags >> 17) & 0x01
	mon.artistRibbon = (flags >> 18) & 0x01
	mon.effortRibbon = (flags >> 19) & 0x01
	mon.marineRibbon = (flags >> 20) & 0x01
	mon.landRibbon = (flags >> 21) & 0x01
	mon.skyRibbon = (flags >> 22) & 0x01
	mon.countryRibbon = (flags >> 23) & 0x01
	mon.nationalRibbon = (flags >> 24) & 0x01
	mon.earthRibbon = (flags >> 25) & 0x01
	mon.worldRibbon = (flags >> 26) & 0x01
	mon.isShadow = (flags >> 27) & 0x01
	mon.unused_0B = (flags >> 28) & 0x01
	mon.abilityNum = (flags >> 29) & 0x03
	mon.modernFatefulEncounter = (flags >> 31) & 0x01
	return mon
end

function readPartyMon(address)
	local mon = readBoxMon(address)
	mon.status = emu:read32(address + 80)
	mon.level = emu:read8(address + 84)
	-- if (levelCap == 0) then
	-- levelCap = mon.level
	-- end
	mon.mail = emu:read8(address + 85)
	mon.hp = emu:read16(address + 86)
	mon.maxHP = emu:read16(address + 88)
	mon.attack = emu:read16(address + 90)
	mon.defense = emu:read16(address + 92)
	mon.speed = emu:read16(address + 94)
	mon.spAttack = emu:read16(address + 96)
	mon.spDefense = emu:read16(address + 98)
	return mon
end

function getAbility(mon)
	current = abilities[emu:read16(speciesInfo+(speciesStructSize*mon.species)+24+(mon.abilityNum*2))]
    return current
end

function getItem(mon)
	return item[(mon.heldItem*10)]
end

function getNature(mon)
	if (mon.hiddenNature == 26) then
		return nature[(mon.personality % 25)+1]
	end
	return nature[mon.hiddenNature+1]
end

function getPartyPrint(mon)
	str = ""
	str = str .. mons[mon.species]
    if (item[mon.heldItem]) then
        str = str .. string.format(" @ %s", item[mon.heldItem]) 
    end
    str = str .. string.format("\n")
	str = str .. "Ability: " .. string.format("%s", getAbility(mon)) .. string.format("\n")
	str = str .. string.format("Level: %d\n", mon.level)
	str = str .. string.format("%s", getNature(mon)) .. " Nature" .. string.format("\n")
	str = str .. string.format("IVs: %d HP / %d Atk / %d Def / %d SpA / %d SpD / %d Spe", mon.hpIV, mon.attackIV, mon.defenseIV, mon.spAttackIV, mon.spDefenseIV, mon.speedIV) .. string.format("\n")
	for i=1,4 do
		local mv = move[mon.moves[i] + 1]
		if(mv == "Hidden Power") then
			str = str .. string.format("- Hidden Power %s\n", getHP(mon))
			else
			if(mv ~= "") then
				str = str .. string.format("- %s\n", mv)
			end
		end
	end
	str = str .. string.format("\n")
	return str
end

function getPCPrint(mon)
	str = ""
	str = str .. mons[mon.species]
    if (item[mon.heldItem]) then
        str = str .. string.format(" @ %s", item[mon.heldItem]) 
    end
    str = str .. string.format("\n")
	str = str .. "Ability: " .. string.format("%s", getAbility(mon)) .. string.format("\n")
	-- str = str .. string.format("Level: %d\n", levelCap)
	str = str .. string.format("Level: %d\n", calcLevel(mon.experience, mon.species))
	str = str .. string.format("%s", getNature(mon)) .. " Nature" .. string.format("\n")
	str = str .. string.format("IVs: %d HP / %d Atk / %d Def / %d SpA / %d SpD / %d Spe", mon.hpIV, mon.attackIV, mon.defenseIV, mon.spAttackIV, mon.spDefenseIV, mon.speedIV) .. string.format("\n")
	for i=1,4 do
		local mv = move[mon.moves[i] + 1]
		if(mv == "Hidden Power") then
			str = str .. string.format("- Hidden Power %s\n", getHP(mon))
			else
			if(mv ~= "") then
				str = str .. string.format("- %s\n", mv)
			end
		end
	end
	str = str .. string.format("\n")
	return str
end

function printPartyStatus(buffer)
    address = storageLoc + 4
    i = 0
	buffer:clear()
	for _, mon in ipairs(getParty()) do
		if (mon.species ~= 0) then
			buffer:print(getPartyPrint(mon))
		end
	end
    while i<120 do
		if (emu:read32(address) ~=0) then
			buffer:print(getPCPrint(readBoxMon(address)))
		end
		i = i+1
		address = address + boxMonSize
	end
end

function getParty()
	local party = {}
	local monStart = partyloc
	for i = 1, emu:read8(partyCount) do
		party[i] = readPartyMon(monStart)
		monStart = monStart + partyMonSize
	end
	return party, monStart
end

function getHP(mon)
    hptype = ((mon.hpIV % 2 + (2 * (mon.attackIV % 2)) +
                 (4 * (mon.defenseIV % 2)) + (8 * (mon.speedIV % 2)) +
                 (16 * (mon.spAttackIV % 2)) + (32 * (mon.spDefenseIV % 2))) * 5) /
                 21
    hptype = math.floor(hptype)
    if (hptype == 0) then return "Fighting" end
    if (hptype == 1) then return "Flying" end
    if (hptype == 2) then return "Poison" end
    if (hptype == 3) then return "Ground" end
    if (hptype == 4) then return "Rock" end
    if (hptype == 5) then return "Bug" end
    if (hptype == 6) then return "Ghost" end
    if (hptype == 7) then return "Steel" end
    if (hptype == 8) then return "Fire" end
    if (hptype == 9) then return "Water" end
    if (hptype == 10) then return "Grass" end
    if (hptype == 11) then return "Electric" end
    if (hptype == 12) then return "Psychic" end
    if (hptype == 13) then return "Ice" end
    if (hptype == 14) then return "Dragon" end
    if (hptype == 15) then return "Dark" end
end

function getHiddens(buffer)
    address = storageLoc + 4
    i = 0
    buffer:clear()
    for _, mon in ipairs(getParty()) do
        if (mon.species ~= 0) then
            buffer:print(string.format("%s - %s\n", mons[mon.species],
                                       getHP(mon)))
        end
    end
    while i < 120 do
        if (emu:read32(address) ~= 0) then
            buffer:print(string.format("%s - %s\n",
                                       mons[readBoxMon(address).species],
                                       getHP(readBoxMon(address))))
        end
        i = i + 1
        address = address + boxMonSize
    end
end

function hiddens()
    if not hiddenBuffer then
        console:log("error")
        return
    end
    getHiddens(hiddenBuffer)
end

function startScript()
	console:log('To update your exports type \'export()\'')
	console:log('To update your hidden powers type \'hiddens()\'')

    --Start configOverlayPokemon

    console:log('To enable your connection for obspokemonoverlay type \'overlayEnable()\', and to disable the connection type \'overlayDisable()\'')
    console:log('If manually updating your obspokemonoverlay-master/team.json file, type \'overlayBuffer()\', which will print to the \'Overlay Export\' window')
    console:log('For more on obspokemonoverlay please review the guidance within this lua script')
    callbacks:add("frame", update)

    --End configOverlayPokemon

    --Start configPokemonEditing

	console:log('To perfect a mon: \'perfect(slotNum, \"Nature\")\'')
	console:log('To set a move: \'setMove(slotNum, moveSlotNum, \"MoveName\")\'')
	console:log('To set a nature: \'setNature(slotNum, \"Nature\")\'')
	console:log('To set nature and IVs: \'setNatureAndIVs(slotNum, \"Nature\", {hp, atk, def, spa, spd, spe})\'')
	console:log('To set the level of a mon: \'setLevel(slotNum, level)\'')
	console:log('To set a species: \'setSpecies(slotNum, \"Species\")\'')
	console:log('To set an ability: \'setAbility(slotNum, abilityNum)\'')
	console:log('To set a held item: \'setItem(slotNum, \"Item\")\'')
	console:log('\nFor the commands that update a mon\'s stats, you have to put the mon in and out of the box or level it up for the stat changes to properly take effect')
    
    --End configPokemonEditing

    --Start configPreDamage

	console:log('To pre-damage: \'predamage(slotNum, desiredHP)\'')

    --End configPreDamage

    --Start configPreStatus

	console:log('To pre-poison: \'prepoison(slotNum)\' [also: presleep/preburn/prefreeze/prepara/pretoxic/prefrostbite]')

    --End configPreStatus

	if not partyBuffer then
		partyBuffer = console:createBuffer("Showdown Export")
		partyBuffer:setSize(200,1000)
		export()
	end
    if not hiddenBuffer then
        hiddenBuffer = console:createBuffer("Hidden Powers")
        hiddenBuffer:setSize(200, 200)
        hiddens()
    end
    if not helpBuffer then
        helpBuffer = console:createBuffer("Help Text")
        helpBuffer:print('To update your exports type \'export()\'\n')
        helpBuffer:print('To update your hidden powers type \'hiddens()\'\n')

    --Start configOverlayPokemon

        helpBuffer:print('To enable your connection for obspokemonoverlay type \'overlayEnable()\', and to disable the connection type \'overlayDisable()\'\n')
        helpBuffer:print('If manually updating your obspokemonoverlay-master/team.json file, type \'overlayBuffer()\', which will print to the \'Overlay Export\' window\n')
        helpBuffer:print('For more on obspokemonoverlay please review the guidance within this lua script\n')

    --End configOverlayPokemon

    --Start configPokemonEditing

        helpBuffer:print('To perfect a mon: \'perfect(slotNum, \"Nature\")\'\n')
        helpBuffer:print('To set a move: \'setMove(slotNum, moveSlotNum, \"MoveName\")\'\n')
        helpBuffer:print('To set a nature: \'setNature(slotNum, \"Nature\")\'')
        helpBuffer:print('To set nature and IVs: \'setNatureAndIVs(slotNum, \"Nature\", {hp, atk, def, spa, spd, spe})\'\n')
        helpBuffer:print('To set the level of a mon: \'setLevel(slotNum, level)\'\n')
        helpBuffer:print('To set a species: \'setSpecies(slotNum, \"Species\")\'\n')
        helpBuffer:print('To set an ability: \'setAbility(slotNum, abilityNum)\'\n')
        helpBuffer:print('To set a held item: \'setItem(slotNum, \"Item\")\'\n')
        helpBuffer:print('\nFor the commands that update a mon\'s stats, you have to put the mon in and out of the box or level it up for the stat changes to properly take effect\n')
    
    --End configPokemonEditing

    --Start configPreDamage

        helpBuffer:print('To pre-damage: \'predamage(slotNum, desiredHP)\'\n')

    --End configPreDamage

    --Start configPreStatus

        helpBuffer:print('To pre-poison: \'prepoison(slotNum)\' [also: presleep/preburn/prefreeze/prepara/pretoxic/prefrostbite]\n')
    
    --End configPreStatus

    end
end

function update()

--Start configOverlayPokemon

    if overlayConfig.enabled then
        if not overlayConfig.processParty and not overlayConfig.processBoxes then
            console:log("ERROR: overlayConfig.processParty and overlayConfig.processBoxes are both currently false.")
            return
        end

        -- Increment the frame counter for party/box checks
        overlayConfig.frameCounter = (overlayConfig.frameCounter + 1)

        -- Only check every X frames to avoid performance issues
        if overlayConfig.frameCounter >= overlayConfig.checkInterval then
            overlayConfig.frameCounter = 0
            overlay()
        end
    end

--End configOverlayPokemon

--Start configCompanion

    if companionConfig.enabled then
        if not companionConfig.processParty and not companionConfig.processBoxes then
            console:log("ERROR: companionConfig.processParty and companionConfig.processBoxes are both currently false.")
            return
        end

        -- Increment the frame counter for party/box checks
        companionConfig.frameCounter = (companionConfig.frameCounter + 1)

        -- Only check every X frames to avoid performance issues
        if companionConfig.frameCounter >= companionConfig.checkInterval then
            companionConfig.frameCounter = 0
            companion()
        end
    end

--End configCompanion

end

--Start configOverlayPokemon

-- START OF OBSPOKEMONHUD FUNCTIONS
-- obspokemonhud by ThomasHineXYZ
-- Updated for gen9 with static and animated Showdown sprites by grintoul (https://www.twitch.tv/grintoul)
-- Lua functions written by grintoul 

-- The below "overlay" functions are for streamers using "obspokemonhud" to get Pokémon sprites on an OBS overlay
-- For users manually updating their team.json file, use of "overlayBuffer()" will print the json contents
-- to the "Overlay Export" buffer. For users that have copied the obspokemonhud-master to the folder 
-- that their mGBA.exe is located, "overlayEnable()" will enable automated writing to the
-- "obspokemonhud-master/team.json" file directly. "overlayDisable()" will switch this back off.

-- NOTE: this assumes your json is called "team.json" and is in the "obspokemonhud-master" folder, which
-- in located the same folder as mGBA.exe. If your json is located elsewhere then the "io.open" function
-- in "overlay()" will need to be edited.

-- For information on obspokemonhud installation, please visit "https://github.com/ThomasHineXYZ/obspokemonhud"


function overlayEnable()
    if not overlayBufferWindow then
        overlayBufferWindow = console:createBuffer("Overlay Export")
        overlayBufferWindow:setSize(200,1000)
    end
    if not overlayConfig.processParty and not overlayConfig.processBoxes then
        console:log("ERROR: overlayConfig.processParty and overlayConfig.processBoxes are both currently false.")
        return
    end
    if overlayConfig.enabled == false then
        overlayConfig.enabled = true
        console:log("obspokemonhud-master/team.json writing enabled.")
    else
        console:log("ERROR: obspokemonhud-master/team.json already enabled.")
    end
end

function overlayDisable()
    if overlayConfig.enabled == true then
        overlayConfig.enabled = false
        console:log("obspokemonhud-master/team.json writing disabled.")
    else
        console:log("ERROR: obspokemonhud-master/team.json writing not currently enabled.")
    end
end

function overlay()
    if overlayConfig.enabled == false then
		console:log("ERROR: please run overlayEnable() first.")
		return
    end

    str = ""
    if overlayConfig.processParty then
        str = str .. getPartyOverlay()
    end
    if overlayConfig.processBoxes then
        str = str .. overlayBoxes()
    end
    local file = io.open("obspokemonhud-master/team.json", "w")
    io.output(file)
    overlayBufferWindow:clear()
    overlayBufferWindow:print(str)
    io.write(str)
    io.close(file)
end

function overlayParty()
	if overlayConfig.enabled == false then
		console:log("ERROR: please run overlayEnable() first.")
		return
    end
    str = str .. getPartyOverlay()
end

function overlayBuffer()
    if not overlayBufferWindow then
        overlayBufferWindow = console:createBuffer("Overlay Export")
        overlayBufferWindow:setSize(200,1000)
    end
    if not overlayConfig.processParty and not overlayConfig.processBoxes then
        console:log("ERROR: overlayConfig.processParty and overlayConfig.processBoxes are both currently false.")
        return
    end
    str = ""
    str = str .. printPartyOverlay(overlayBufferWindow)
    overlayBufferWindow:clear()
    overlayBufferWindow:print(str)
end

function getPartyOverlay()
	local party = {}
	local monStart = partyloc
    mon = ""
    variant = ""
    str = str .. "{\n"
	for i = 1, emu:read8(partyCount) do
        str = str .. "      \"slot" 
        str = str .. tostring(i) 
        str = str .. "\": {\n"
		party[i] = readBoxMon(monStart)
        str = str .. "          \"dexnumber\": " 
        if string.find(mons[party[i].species],"-") then
            if not string.find(mons[party[i].species],"Nidoran") then
                sep = string.find(mons[party[i].species],"-")
                str = str .. dexNumber[party[i].species]
                str = str .. ",\n"
                str = str .. "          \"form\": \""
                mon = mons[party[i].species]
                variant = string.sub(mon, sep + 1, 100)
                variant = string.gsub(variant, "%-", "")
                str = str .. string.lower(variant)
                str = str .. "\",\n"
            else
                str = str .. party[i].species
            end
        else
            str = str .. party[i].species
            str = str .. ",\n"
            str = str .. "          \"form\": \"standard\""
            str = str .. ",\n"
        end
        str = str .. "          \"pokeball\": \"" --	str = str .. mons[mon.species]
        str = str .. tostring(pokeballType[party[i].pokeball])
        str = str .."\",\n"
        str = str .. "          \"shiny\": false\n"
        if (readPartyMon(monStart + partyMonSize).species ~= 0) or overlayConfig.processBoxes then
            str = str .. "      },\n"
        else
            str = str .. "      }\n"
        end
		monStart = monStart + partyMonSize
	end
    str = str .. "}\n"
	return str
end

-- END OF OBSPOKEMONHUD FUNCTIONS

--End configOverlayPokemon

function companionEnable()
    if not companionBufferWindow then
        companionBufferWindow = console:createBuffer("Companion Export")
        companionBufferWindow:setSize(200,1000)
    end
    if not companionConfig.processParty and not companionConfig.processBoxes then
        console:log("ERROR: companionConfig.processParty and companionConfig.processBoxes are both currently false.")
        return
    end
    if companionConfig.enabled == false then
        companionConfig.enabled = true
        console:log("companion.json writing enabled.")
    else
        console:log("ERROR: companion.json already enabled.")
    end
end

function companionDisable()
    if companionConfig.enabled == true then
        companionConfig.enabled = false
        console:log("companion.json writing disabled.")
    else
        console:log("ERROR: companion.json writing not currently enabled.")
    end
end

function companion()
    if companionConfig.enabled == false then
		console:log("ERROR: please run companionEnable() first.")
		return
    end

    str = "{\n"
    if companionConfig.processParty then
        str = getPartyCompanion()
    end
    if companionConfig.processBoxes then
        str = getBoxCompanion()
    end
    str = str .. "}"
    local file = io.open("companion.json", "w"):close()
    file = io.open("companion.json", "w")
    io.output(file)
    companionBufferWindow:clear()
    companionBufferWindow:print(str)
    io.write(str)
    io.close(file)
end

function getPartyCompanion()
	local party = {}
	local monStart = partyloc
    mon = ""
    variant = ""
    str = str .. "  \"party\": [\n"
	for i = 1, emu:read8(partyCount) do
		party[i] = readBoxMon(monStart)
        str = str .. "      {\n"
        str = str .. "          \"dexnumber\": " 

        -- EE defines different forms as different species which don't always match the dex number. 
        -- This if block cleanses forms back to dex number and adds the form on a separate line.
        if string.find(mons[party[i].species],"Nidoran") then
            -- Dex number
	        str = str .. string.format("%d,\n", dexNumber[party[i].species])
            -- Species name
	        str = str .. string.format("          \"species\": \"%s\",\n", mons[dexNumber[party[i].species]])
            -- Form
            str = str .. "          \"form\": \"standard\",\n"
        elseif string.find(mons[party[i].species],"-") then
            sep = string.find(mons[party[i].species],"-")
            -- Dex number
            str = str .. string.format("%d,\n", dexNumber[party[i].species])
            -- Species name
            str = str .. string.format("          \"species\": \"%s\",\n", mons[dexNumber[party[i].species]])
            -- Form
            str = str .. "          \"form\": \""
            mon = mons[party[i].species]
            variant = string.sub(mon, sep + 1, 100)
            variant = string.gsub(variant, "%-", "")
            str = str .. string.lower(variant)
            str = str .. "\",\n"
        -- Enamorus is the last mon before a big block of different forms
        elseif party[i].species > 905 then
            -- Dex number
	        str = str .. string.format("%d,\n", dexNumber[party[i].species])
            -- Species
	        str = str .. string.format("          \"species\": \"%s\",\n", mons[party[i].species])
            -- Form, for format consistency
            str = str .. "          \"form\": \"standard\",\n"
        else
            -- Dex number
	        str = str .. string.format("%d,\n", party[i].species)
            -- Species
	        str = str .. string.format("          \"species\": \"%s\",\n", mons[dexNumber[party[i].species]])
            -- Form, for format consistency
            str = str .. "          \"form\": \"standard\",\n"
        end

	    str = str .. string.format("          \"nickname\": \"%s\",\n", party[i].nickname)
	    str = str .. string.format("          \"level\": %d,\n", calcLevel(party[i].experience, party[i].species))
	    str = str .. string.format("          \"ivs\": [%d, %d, %d, %d, %d, %d],\n", party[i].hpIV, party[i].attackIV, party[i].defenseIV, party[i].spAttackIV, party[i].spDefenseIV, party[i].speedIV)
	    str = str .. string.format("          \"nature\": \"%s\",\n", getNature(party[i]))
	    str = str .. string.format("          \"ability\": \"%s\",\n", getAbility(party[i]))
	    str = str .. string.format("          \"held_item\": \"%s\",\n", item[party[i].heldItem])
	    str = str .. string.format("          \"met_location\": \"%s\",\n", metLocation[party[i].metLocation])
	    str = str .. string.format("          \"met_level\": \"%d\",\n", party[i].metLevel)
	    str = str .. string.format("          \"pokeball\": \"%s\",\n", tostring(pokeballType[party[i].pokeball]))
	    str = str .. string.format("          \"shiny\": \"%d\",\n", party[i].shinyModifier)
	    str = str .. "          \"gender\": \""

        local genderRatio = emu:read8(speciesInfo + (speciesStructSize * party[i].species) + 0x12)
        if (genderRatio == 0xFF) then
            str = str .. "None\",\n"
        elseif (genderRatio > (party[i].personality & 0xFF)) then
            str = str .. "Female\",\n"
        else
            str = str .. "Male\",\n"
        end

	    str = str .. string.format("          \"moves\": \"[%s, %s, %s, %s]\",\n", move[party[i].moves[1] + 1], move[party[i].moves[2] + 1], move[party[i].moves[3] + 1], move[party[i].moves[4] + 1])
        
        if (readPartyMon(monStart + partyMonSize).species ~= 0) or companionConfig.processBoxes then
            str = str .. "      },\n"
        else
            str = str .. "      }\n"
        end

		monStart = monStart + partyMonSize
	end
    if companionConfig.processBoxes then
        str = str .. "  ],\n"
    else
        str = str .. "  ]\n"
    end
	return str
end

function getBoxCompanion()
    address = storageLoc + 4
    local pokemon = readBoxMon(address)
    mon = ""
    variant = ""
    str = str .. "  \"boxes\": {\n"
    i = 1
    j = 1
    k = 1
    while j < 15 do
        str = str .. "      \"" .. string.format("%d",j) .. "\": [\n"
        while i < 30 do
            if (emu:read32(address) ~=0) then
                pokemon = readBoxMon(address)

                str = str .. "          {\n"
                str = str .. "            \"dexnumber\": " 

                -- EE defines different forms as different species which don't always match the dex number. 
                -- This if block cleanses forms back to dex number and adds the form on a separate line.
                if string.find(mons[pokemon.species],"Nidoran") then
                    -- Dex number
                    str = str .. string.format("%d,\n", dexNumber[pokemon.species])
                    -- Species name
                    str = str .. string.format("            \"species\": \"%s\",\n", mons[dexNumber[pokemon.species]])
                    -- Form
                    str = str .. "            \"form\": \"standard\",\n"
                elseif string.find(mons[pokemon.species],"-") then
                    sep = string.find(mons[pokemon.species],"-")
                    -- Dex number
                    str = str .. string.format("%d,\n", dexNumber[pokemon.species])
                    -- Species name
                    str = str .. string.format("            \"species\": \"%s\",\n", mons[dexNumber[pokemon.species]])
                    -- Form
                    str = str .. "            \"form\": \""
                    mon = mons[pokemon.species]
                    variant = string.sub(mon, sep + 1, 100)
                    variant = string.gsub(variant, "%-", "")
                    str = str .. string.lower(variant)
                    str = str .. "\",\n"
                -- Enamorus is the last mon before a big block of different forms
                elseif pokemon.species > 905 then
                    -- Dex number
                    str = str .. string.format("%d,\n", dexNumber[pokemon.species])
                    -- Species
                    str = str .. string.format("            \"species\": \"%s\",\n", mons[pokemon.species])
                    -- Form, for format consistency
                    str = str .. "            \"form\": \"standard\",\n"
                else
                    -- Dex number
                    str = str .. string.format("%d,\n", pokemon.species)
                    -- Species
                    str = str .. string.format("            \"species\": \"%s\",\n", mons[dexNumber[pokemon.species]])
                    -- Form, for format consistency
                    str = str .. "            \"form\": \"standard\",\n"
                end

                str = str .. string.format("            \"nickname\": \"%s\",\n", pokemon.nickname)
                str = str .. string.format("            \"level\": %d,\n", calcLevel(pokemon.experience, pokemon.species))
                str = str .. string.format("            \"ivs\": [%d, %d, %d, %d, %d, %d],\n", pokemon.hpIV, pokemon.attackIV, pokemon.defenseIV, pokemon.spAttackIV, pokemon.spDefenseIV, pokemon.speedIV)
                str = str .. string.format("            \"nature\": \"%s\",\n", getNature(pokemon))
                str = str .. string.format("            \"ability\": \"%s\",\n", getAbility(pokemon))
                str = str .. string.format("            \"held_item\": \"%s\",\n", item[pokemon.heldItem])
                str = str .. string.format("            \"met_location\": \"%s\",\n", metLocation[pokemon.metLocation])
                str = str .. string.format("            \"met_level\": \"%d\",\n", pokemon.metLevel)
                str = str .. string.format("            \"pokeball\": \"%s\",\n", tostring(pokeballType[pokemon.pokeball]))
                str = str .. string.format("            \"shiny\": \"%d\",\n", pokemon.shinyModifier)
                str = str .. "              \"gender\": \""

                local genderRatio = emu:read8(speciesInfo + (speciesStructSize * pokemon.species) + 0x12)
                if (genderRatio == 0xFF) then
                    str = str .. "None\",\n"
                elseif (genderRatio > (pokemon.personality & 0xFF)) then
                    str = str .. "Female\",\n"
                else
                    str = str .. "Male\",\n"
                end

                str = str .. string.format("            \"moves\": \"[%s, %s, %s, %s]\",\n", move[pokemon.moves[1] + 1], move[pokemon.moves[2] + 1], move[pokemon.moves[3] + 1], move[pokemon.moves[4] + 1])
                
                if i < 29 then
                    str = str .. "          },\n"
                else
                    str = str .. "          }\n"
                end
            end

            address = address + boxMonSize
            i = i + 1
        end
        if j < 14 then
            str = str .. "      ],\n"
        else
            str = str .. "      ]\n"
        end
    j = j + 1
    end
    str = str .. "  }\n"

	return str
end

--End configCompanion

function export() -- P_LUA_SCRIPT_EXPORT
	if not partyBuffer then
		console:log("error")
		return
	end
	printPartyStatus(partyBuffer)
	levelCap = 0
end

function getSlotAddress(slot)
    if (slot < 1 or slot > emu:read8(partyCount)) then
        console:log("Invalid slot number")
        return
    end
    return partyloc + partyMonSize * (slot - 1)
end

--Start configPokemonEditing

function setIVs(slot, IVs) -- P_LUA_SCRIPT_STATS
    local address = getSlotAddress(slot)
    setBoxMon(address, nil, IVs, nil, nil, nil, nil, nil, nil)
end

function perfect(slot, newNature) -- P_LUA_SCRIPT_STATS
    local address = getSlotAddress(slot)
    setBoxMon(address, newNature, {31, 31, 31, 31, 31, 31}, nil, nil, nil, nil,
              nil, nil)
end

function setMove(slot, moveSlot, moveName) -- P_LUA_SCRIPT_MOVES
    local address = getSlotAddress(slot)
    setBoxMon(address, nil, nil, moveSlot, moveName, nil, nil, nil, nil)

end

function setNature(slot, newNature) -- P_LUA_SCRIPT_STATS
    local address = getSlotAddress(slot)
    setBoxMon(address, newNature, nil, nil, nil, nil, nil, nil, nil)
end

function setNatureAndIVs(slot, newNature, IVs) -- P_LUA_SCRIPT_STATS
    local address = getSlotAddress(slot)
    setBoxMon(address, newNature, IVs, nil, nil, nil, nil, nil, nil)
end

function setLevel(slot, newLevel) -- P_LUA_SCRIPT_POKEMON
    local address = getSlotAddress(slot)
    setBoxMon(address, nil, nil, nil, nil, newLevel, nil, nil, nil)
end

function setSpecies(slot, newSpecies) -- P_LUA_SCRIPT_POKEMON
    local address = getSlotAddress(slot)
    setBoxMon(address, nil, nil, nil, nil, nil, newSpecies, nil, nil)
end

function setAbility(slot, newAbilityNum) -- P_LUA_SCRIPT_POKEMON
    local address = getSlotAddress(slot)
    setBoxMon(address, nil, nil, nil, nil, nil, nil, newAbilityNum, nil)
end

function setItem(slot, newHeldItem) -- P_LUA_SCRIPT_ITEMS
    local address = getSlotAddress(slot)
    setBoxMon(address, nil, nil, nil, nil, nil, nil, nil, newHeldItem)
end

function thieve(slot, newSpecies, newLevel, newAbilityNum, newMoves, newHeldItem)
    local address = getSlotAddress(slot)
    setBoxMon(address, nil, nil, 1, newMoves[1], nil, newSpecies, newAbilityNum, newHeldItem)
    setBoxMon(address, nil, nil, 2, newMoves[2], newLevel, nil, nil, nil)
    setBoxMon(address, nil, nil, 3, newMoves[3], nil, nil, nil, nil)
    setBoxMon(address, nil, nil, 4, newMoves[4], nil, nil, nil, nil)
end

--End configPokemonEditing

function indexOf(array, value)
    for i, v in ipairs(array) do
        if v == value then
            return i
        end
    end
    return nil
end

--Start configPreDamage

function predamage(slot, damage)
    local address = getSlotAddress(slot)
    local maxHP = emu:read16(address + 88)
    if (damage <= 0) then
        console:log("You probably don't want to do that")
        return
    end
    if (damage > maxHP) then damage = maxHP end
    emu:write16(address + 86, damage & 0xFFFF)
end

--End configPreDamage

--Start configPreStatus

function presleep(slot)
    local address = getSlotAddress(slot)
    emu:write32(address + 80, 1 << 0 | 1 << 1 | 1 << 2)
end

function prepoison(slot)
    local address = getSlotAddress(slot)
    emu:write32(address + 80, 1 << 3)
end

function preburn(slot)
    local address = getSlotAddress(slot)
    emu:write32(address + 80, 1 << 4)
end

function prefreeze(slot)
    local address = getSlotAddress(slot)
    emu:write32(address + 80, 1 << 5)
end

function prepara(slot)
    local address = getSlotAddress(slot)
    emu:write32(address + 80, 1 << 6)
end

function pretoxic(slot)
    local address = getSlotAddress(slot)
    emu:write32(address + 80, 1 << 7)
end

function prefrostbite(slot)
    local address = getSlotAddress(slot)
    emu:write32(address + 80, 1 << 12)
end

--End configPreStatus

callbacks:add("start", startScript)
if emu then
	startScript()
end

--Start configRandomize

function randomize(slot)
    if (slot < 1 or slot > emu:read8(partyCount)) then
        console:log("Invalid slot number")
        return
    end
    local randomNumber = numberGen()
    local newSpecies = randomPokemon(randomNumber)
    local address = partyloc + partyMonSize * (slot - 1)
    setBoxMon(address, nil, nil, nil, nil, nil, newSpecies, nil)
   
end

function numberGen()
	math.randomseed(os.time())
	local min = 1
	local max = 1025
	local randomNumber = math.random(min, max)
	return randomNumber
end

function randomPokemon(index)
	local pokemonList = {"Bulbasaur","Ivysaur","Venusaur","Charmander","Charmeleon","Charizard","Squirtle","Wartortle","Blastoise","Caterpie","Metapod","Butterfree","Weedle","Kakuna","Beedrill","Pidgey","Pidgeotto","Pidgeot","Rattata","Raticate","Spearow","Fearow","Ekans","Arbok","Pikachu","Raichu","Sandshrew","Sandslash","Nidoran♀","Nidorina","Nidoqueen","Nidoran♂","Nidorino","Nidoking","Clefairy","Clefable","Vulpix","Ninetales","Jigglypuff","Wigglytuff","Zubat","Golbat","Oddish","Gloom","Vileplume","Paras","Parasect","Venonat","Venomoth","Diglett","Dugtrio","Meowth","Persian","Psyduck","Golduck","Mankey","Primeape","Growlithe","Arcanine","Poliwag","Poliwhirl","Poliwrath","Abra","Kadabra","Alakazam","Machop","Machoke","Machamp","Bellsprout","Weepinbell","Victreebel","Tentacool","Tentacruel","Geodude","Graveler","Golem","Ponyta","Rapidash","Slowpoke","Slowbro","Magnemite","Magneton","Farfetch’d","Doduo","Dodrio","Seel","Dewgong","Grimer","Muk","Shellder","Cloyster","Gastly","Haunter","Gengar","Onix","Drowzee","Hypno","Krabby","Kingler","Voltorb","Electrode","Exeggcute","Exeggutor","Cubone","Marowak","Hitmonlee","Hitmonchan","Lickitung","Koffing","Weezing","Rhyhorn","Rhydon","Chansey","Tangela","Kangaskhan","Horsea","Seadra","Goldeen","Seaking","Staryu","Starmie","Mr. Mime","Scyther","Jynx","Electabuzz","Magmar","Pinsir","Tauros","Magikarp","Gyarados","Lapras","Ditto","Eevee","Vaporeon","Jolteon","Flareon","Porygon","Omanyte","Omastar","Kabuto","Kabutops","Aerodactyl","Snorlax","Articuno","Zapdos","Moltres","Dratini","Dragonair","Dragonite","Mewtwo","Mew","Chikorita","Bayleef","Meganium","Cyndaquil","Quilava","Typhlosion","Totodile","Croconaw","Feraligatr","Sentret","Furret","Hoothoot","Noctowl","Ledyba","Ledian","Spinarak","Ariados","Crobat","Chinchou","Lanturn","Pichu","Cleffa","Igglybuff","Togepi","Togetic","Natu","Xatu","Mareep","Flaaffy","Ampharos","Bellossom","Marill","Azumarill","Sudowoodo","Politoed","Hoppip","Skiploom","Jumpluff","Aipom","Sunkern","Sunflora","Yanma","Wooper","Quagsire","Espeon","Umbreon","Murkrow","Slowking","Misdreavus","Unown","Wobbuffet","Girafarig","Pineco","Forretress","Dunsparce","Gligar","Steelix","Snubbull","Granbull","Qwilfish","Scizor","Shuckle","Heracross","Sneasel","Teddiursa","Ursaring","Slugma","Magcargo","Swinub","Piloswine","Corsola","Remoraid","Octillery","Delibird","Mantine","Skarmory","Houndour","Houndoom","Kingdra","Phanpy","Donphan","Porygon2","Stantler","Smeargle","Tyrogue","Hitmontop","Smoochum","Elekid","Magby","Miltank","Blissey","Raikou","Entei","Suicune","Larvitar","Pupitar","Tyranitar","Lugia","Ho-Oh","Celebi","Treecko","Grovyle","Sceptile","Torchic","Combusken","Blaziken","Mudkip","Marshtomp","Swampert","Poochyena","Mightyena","Zigzagoon","Linoone","Wurmple","Silcoon","Beautifly","Cascoon","Dustox","Lotad","Lombre","Ludicolo","Seedot","Nuzleaf","Shiftry","Taillow","Swellow","Wingull","Pelipper","Ralts","Kirlia","Gardevoir","Surskit","Masquerain","Shroomish","Breloom","Slakoth","Vigoroth","Slaking","Nincada","Ninjask","Shedinja","Whismur","Loudred","Exploud","Makuhita","Hariyama","Azurill","Nosepass","Skitty","Delcatty","Sableye","Mawile","Aron","Lairon","Aggron","Meditite","Medicham","Electrike","Manectric","Plusle","Minun","Volbeat","Illumise","Roselia","Gulpin","Swalot","Carvanha","Sharpedo","Wailmer","Wailord","Numel","Camerupt","Torkoal","Spoink","Grumpig","Spinda","Trapinch","Vibrava","Flygon","Cacnea","Cacturne","Swablu","Altaria","Zangoose","Seviper","Lunatone","Solrock","Barboach","Whiscash","Corphish","Crawdaunt","Baltoy","Claydol","Lileep","Cradily","Anorith","Armaldo","Feebas","Milotic","Castform","Kecleon","Shuppet","Banette","Duskull","Dusclops","Tropius","Chimecho","Absol","Wynaut","Snorunt","Glalie","Spheal","Sealeo","Walrein","Clamperl","Huntail","Gorebyss","Relicanth","Luvdisc","Bagon","Shelgon","Salamence","Beldum","Metang","Metagross","Regirock","Regice","Registeel","Latias","Latios","Kyogre","Groudon","Rayquaza","Jirachi","Deoxys","Turtwig","Grotle","Torterra","Chimchar","Monferno","Infernape","Piplup","Prinplup","Empoleon","Starly","Staravia","Staraptor","Bidoof","Bibarel","Kricketot","Kricketune","Shinx","Luxio","Luxray","Budew","Roserade","Cranidos","Rampardos","Shieldon","Bastiodon","Burmy","Wormadam","Mothim","Combee","Vespiquen","Pachirisu","Buizel","Floatzel","Cherubi","Cherrim","Shellos","Gastrodon","Ambipom","Drifloon","Drifblim","Buneary","Lopunny","Mismagius","Honchkrow","Glameow","Purugly","Chingling","Stunky","Skuntank","Bronzor","Bronzong","Bonsly","Mime Jr.","Happiny","Chatot","Spiritomb","Gible","Gabite","Garchomp","Munchlax","Riolu","Lucario","Hippopotas","Hippowdon","Skorupi","Drapion","Croagunk","Toxicroak","Carnivine","Finneon","Lumineon","Mantyke","Snover","Abomasnow","Weavile","Magnezone","Lickilicky","Rhyperior","Tangrowth","Electivire","Magmortar","Togekiss","Yanmega","Leafeon","Glaceon","Gliscor","Mamoswine","Porygon-Z","Gallade","Probopass","Dusknoir","Froslass","Rotom","Uxie","Mesprit","Azelf","Dialga","Palkia","Heatran","Regigigas","Giratina","Cresselia","Phione","Manaphy","Darkrai","Shaymin","Arceus","Victini","Snivy","Servine","Serperior","Tepig","Pignite","Emboar","Oshawott","Dewott","Samurott","Patrat","Watchog","Lillipup","Herdier","Stoutland","Purrloin","Liepard","Pansage","Simisage","Pansear","Simisear","Panpour","Simipour","Munna","Musharna","Pidove","Tranquill","Unfezant","Blitzle","Zebstrika","Roggenrola","Boldore","Gigalith","Woobat","Swoobat","Drilbur","Excadrill","Audino","Timburr","Gurdurr","Conkeldurr","Tympole","Palpitoad","Seismitoad","Throh","Sawk","Sewaddle","Swadloon","Leavanny","Venipede","Whirlipede","Scolipede","Cottonee","Whimsicott","Petilil","Lilligant","Basculin","Sandile","Krokorok","Krookodile","Darumaka","Darmanitan","Maractus","Dwebble","Crustle","Scraggy","Scrafty","Sigilyph","Yamask","Cofagrigus","Tirtouga","Carracosta","Archen","Archeops","Trubbish","Garbodor","Zorua","Zoroark","Minccino","Cinccino","Gothita","Gothorita","Gothitelle","Solosis","Duosion","Reuniclus","Ducklett","Swanna","Vanillite","Vanillish","Vanilluxe","Deerling","Sawsbuck","Emolga","Karrablast","Escavalier","Foongus","Amoonguss","Frillish","Jellicent","Alomomola","Joltik","Galvantula","Ferroseed","Ferrothorn","Klink","Klang","Klinklang","Tynamo","Eelektrik","Eelektross","Elgyem","Beheeyem","Litwick","Lampent","Chandelure","Axew","Fraxure","Haxorus","Cubchoo","Beartic","Cryogonal","Shelmet","Accelgor","Stunfisk","Mienfoo","Mienshao","Druddigon","Golett","Golurk","Pawniard","Bisharp","Bouffalant","Rufflet","Braviary","Vullaby","Mandibuzz","Heatmor","Durant","Deino","Zweilous","Hydreigon","Larvesta","Volcarona","Cobalion","Terrakion","Virizion","Tornadus","Thundurus","Reshiram","Zekrom","Landorus","Kyurem","Keldeo","Meloetta","Genesect","Chespin","Quilladin","Chesnaught","Fennekin","Braixen","Delphox","Froakie","Frogadier","Greninja","Bunnelby","Diggersby","Fletchling","Fletchinder","Talonflame","Scatterbug","Spewpa","Vivillon","Litleo","Pyroar","Flabébé","Floette","Florges","Skiddo","Gogoat","Pancham","Pangoro","Furfrou","Espurr","Meowstic","Honedge","Doublade","Aegislash","Spritzee","Aromatisse","Swirlix","Slurpuff","Inkay","Malamar","Binacle","Barbaracle","Skrelp","Dragalge","Clauncher","Clawitzer","Helioptile","Heliolisk","Tyrunt","Tyrantrum","Amaura","Aurorus","Sylveon","Hawlucha","Dedenne","Carbink","Goomy","Sliggoo","Goodra","Klefki","Phantump","Trevenant","Pumpkaboo","Gourgeist","Bergmite","Avalugg","Noibat","Noivern","Xerneas","Yveltal","Zygarde","Diancie","Hoopa","Volcanion","Rowlet","Dartrix","Decidueye","Litten","Torracat","Incineroar","Popplio","Brionne","Primarina","Pikipek","Trumbeak","Toucannon","Yungoos","Gumshoos","Grubbin","Charjabug","Vikavolt","Crabrawler","Crabominable","Oricorio","Cutiefly","Ribombee","Rockruff","Lycanroc","Wishiwashi","Mareanie","Toxapex","Mudbray","Mudsdale","Dewpider","Araquanid","Fomantis","Lurantis","Morelull","Shiinotic","Salandit","Salazzle","Stufful","Bewear","Bounsweet","Steenee","Tsareena","Comfey","Oranguru","Passimian","Wimpod","Golisopod","Sandygast","Palossand","Pyukumuku","Type: Null","Silvally","Minior","Komala","Turtonator","Togedemaru","Mimikyu","Bruxish","Drampa","Dhelmise","Jangmo-o","Hakamo-o","Kommo-o","Tapu Koko","Tapu Lele","Tapu Bulu","Tapu Fini","Cosmog","Cosmoem","Solgaleo","Lunala","Nihilego","Buzzwole","Pheromosa","Xurkitree","Celesteela","Kartana","Guzzlord","Necrozma","Magearna","Marshadow","Poipole","Naganadel","Stakataka","Blacephalon","Zeraora","Meltan","Melmetal","Grookey","Thwackey","Rillaboom","Scorbunny","Raboot","Cinderace","Sobble","Drizzile","Inteleon","Skwovet","Greedent","Rookidee","Corvisquire","Corviknight","Blipbug","Dottler","Orbeetle","Nickit","Thievul","Gossifleur","Eldegoss","Wooloo","Dubwool","Chewtle","Drednaw","Yamper","Boltund","Rolycoly","Carkol","Coalossal","Applin","Flapple","Appletun","Silicobra","Sandaconda","Cramorant","Arrokuda","Barraskewda","Toxel","Toxtricity","Sizzlipede","Centiskorch","Clobbopus","Grapploct","Sinistea","Polteageist","Hatenna","Hattrem","Hatterene","Impidimp","Morgrem","Grimmsnarl","Obstagoon","Perrserker","Cursola","Sirfetch’d","Mr. Rime","Runerigus","Milcery","Alcremie","Falinks","Pincurchin","Snom","Frosmoth","Stonjourner","Eiscue","Indeedee","Morpeko","Cufant","Copperajah","Dracozolt","Arctozolt","Dracovish","Arctovish","Duraludon","Dreepy","Drakloak","Dragapult","Zacian","Zamazenta","Eternatus","Kubfu","Urshifu","Zarude","Regieleki","Regidrago","Glastrier","Spectrier","Calyrex","Wyrdeer","Kleavor","Ursaluna","Basculegion","Sneasler","Overqwil","Enamorus","Sprigatito","Floragato","Meowscarada","Fuecoco","Crocalor","Skeledirge","Quaxly","Quaxwell","Quaquaval","Lechonk","Oinkologne","Tarountula","Spidops","Nymble","Lokix","Pawmi","Pawmo","Pawmot","Tandemaus","Maushold","Fidough","Dachsbun","Smoliv","Dolliv","Arboliva","Squawkabilly","Nacli","Naclstack","Garganacl","Charcadet","Armarouge","Ceruledge","Tadbulb","Bellibolt","Wattrel","Kilowattrel","Maschiff","Mabosstiff","Shroodle","Grafaiai","Bramblin","Brambleghast","Toedscool","Toedscruel","Klawf","Capsakid","Scovillain","Rellor","Rabsca","Flittle","Espathra","Tinkatink","Tinkatuff","Tinkaton","Wiglett","Wugtrio","Bombirdier","Finizen","Palafin","Varoom","Revavroom","Cyclizar","Orthworm","Glimmet","Glimmora","Greavard","Houndstone","Flamigo","Cetoddle","Cetitan","Veluza","Dondozo","Tatsugiri","Annihilape","Clodsire","Farigiraf","Dudunsparce","Kingambit","Great Tusk","Scream Tail","Brute Bonnet","Flutter Mane","Slither Wing","Sandy Shocks","Iron Treads","Iron Bundle","Iron Hands","Iron Jugulis","Iron Moth","Iron Thorns","Frigibax","Arctibax","Baxcalibur","Gimmighoul","Gholdengo","Wo-Chien","Chien-Pao","Ting-Lu","Chi-Yu","Roaring Moon","Iron Valiant","Koraidon","Miraidon","Walking Wake","Iron Leaves","Dipplin","Poltchageist","Sinistcha","Okidogi","Munkidori","Fezandipiti","Ogerpon","Archaludon","Hydrapple","Gouging Fire","Raging Bolt","Iron Boulder","Iron Crown","Terapagos","Pecharunt"}
	return pokemonList[index]
end

--End configRandomize

